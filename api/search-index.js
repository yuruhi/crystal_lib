crystal_doc_search_index_callback({"repository_name":"github.com/yuruhi/crystal_lib","body":"[![Actions Status](https://github.com/yuruhi/crystal_lib/workflows/verify/badge.svg)](https://github.com/yuruhi/crystal_lib/actions) \n\n[![GitHub Pages](https://img.shields.io/static/v1?label=GitHub+Pages&message=+&color=brightgreen&logo=github)](https://yuruhi.github.io/crystal_lib/) \n","program":{"html_id":"github.com/yuruhi/crystal_lib/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/yuruhi/crystal_lib","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"EPS","name":"EPS","value":"Real.new(1e-12)","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"enumerate_combination(n)-class-method","html_id":"enumerate_combination(n)-class-method","name":"enumerate_combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/enumerate_combination.cr#L1","def":{"name":"enumerate_combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"res = Array.new(n + 1) do\n  Array.new(n + 1, 0_i64)\nend\n(0..n).each do |i|\n  res[i][0] = res[i][i] = 1\nend\n(1..n).each do |i|\n  (1...i).each do |j|\n    res[i][j] = res[i - 1][j - 1] + res[i - 1][j]\n  end\nend\nres\n"}},{"id":"eratosthenes(n:Int32)-class-method","html_id":"eratosthenes(n:Int32)-class-method","name":"eratosthenes","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"}],"args_string":"(n : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/eratosthenes.cr#L1","def":{"name":"eratosthenes","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if n <= 0\n  raise(ArgumentError.new)\nend\nres = [true] * (n + 1)\nres[0] = res[1] = false\n2.upto(n) do |i|\n  if (!res[i]) || (i.to_i64 ** 2) > n\n    next\n  end\n  (i ** 2).step(to: n, by: i) do |j|\n    res[j] = false\n  end\nend\nres\n"}},{"id":"primes(n:Int32)-class-method","html_id":"primes(n:Int32)-class-method","name":"primes","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"}],"args_string":"(n : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/eratosthenes.cr#L14","def":{"name":"primes","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"flag = eratosthenes(n)\n(2..n).select do |i|\n  flag[i]\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"input(s)-macro","html_id":"input(s)-macro","name":"input","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/scanner.cr#L70","def":{"name":"input","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n{% if s.is_a?(Call) %}\n    {% if s.receiver.is_a?(Nop) %}\n      internal_input(\n        {{ s.name }}, {{ s.name }}(\n          {% for argument in s.args %}\n            input({{ argument }}),\n          {% end %}\n        )\n      )\n    {% else %}{% if s.name.stringify == \"[]\" %}\n      internal_input_array(\n        {{ s.receiver }}, {{ s.args }}, {{ s.receiver }}[\n          {% for argument in s.args %}\n            input({{ argument }}),\n          {% end %}\n        ] {{ s.block }}\n      )\n    {% else %}\n      input({{ s.receiver }}).{{ s.name.id }}(\n        {% for argument in s.args %}\n          input({{ argument }}),\n        {% end %}\n      ) {{ s.block }}\n    {% end %}{% end %}\n  {% else %}\n    internal_input({{ s.id }}, {{ s.id }})\n  {% end %}\n\n\n"}},{"id":"input(*s)-macro","html_id":"input(*s)-macro","name":"input","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(*s)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/scanner.cr#L100","def":{"name":"input","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"  \n{\n    \n{% for s in s %}\n      input({{ s }}),\n    {% end %}\n\n  }\n\n"}},{"id":"internal_input(s,else_ast)-macro","html_id":"internal_input(s,else_ast)-macro","name":"internal_input","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""},{"name":"else_ast","doc":null,"default_value":"","external_name":"else_ast","restriction":""}],"args_string":"(s, else_ast)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/scanner.cr#L38","def":{"name":"internal_input","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""},{"name":"else_ast","doc":null,"default_value":"","external_name":"else_ast","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n{% if Scanner.class.has_method?(s.id) %}\n    Scanner.{{ s.id }}\n  {% else %}{% if s.stringify == \"String\" %}\n    Scanner.s\n  {% else %}{% if s.stringify == \"Char\" %}\n    Scanner.c\n  {% else %}{% if s.stringify =~ (/[A-Z][a-z0-9_]*/) %}\n    {{ s.id }}.new(Scanner.s)\n  {% else %}{% if String.has_method?(\"to_#{s}\".id) %}\n    Scanner.s.to_{{ s.id }}\n  {% else %}\n    {{ else_ast }}\n  {% end %}{% end %}{% end %}{% end %}{% end %}\n\n\n"}},{"id":"internal_input_array(s,args,else_ast)-macro","html_id":"internal_input_array(s,args,else_ast)-macro","name":"internal_input_array","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"else_ast","doc":null,"default_value":"","external_name":"else_ast","restriction":""}],"args_string":"(s, args, else_ast)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/scanner.cr#L54","def":{"name":"internal_input_array","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"else_ast","doc":null,"default_value":"","external_name":"else_ast","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n{% if ((Scanner.class.has_method?(s.id)) || (s.stringify =~ (/[A-Z][a-z0-9_]*/))) || (String.has_method?(\"to_#{s}\".id)) %}\n    Array.new(input({{ args.first }})) do\n      {% if args.size == 1 %}\n        input({{ s.id }})\n      {% else %}\n        internal_input_array({{ s }}, {{ args[1...args.size] }}, else_ast)\n      {% end %}\n    end\n  {% else %}\n    {{ else_ast }}\n  {% end %}\n\n\n"}},{"id":"static_modint(name,mod)-macro","html_id":"static_modint(name,mod)-macro","name":"static_modint","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":""}],"args_string":"(name, mod)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L1","def":{"name":"static_modint","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  struct \n{{ name }}\n\n    MOD = \n{{ mod }}\ni64\n\n    def self.zero\n      new\n    \nend\n\n    def self.raw(value : Int64)\n      result = new\n      result.value = value\n      result\n    \nend\n\n    macro [](*nums)\n      \n{% verbatim do %}\n        Array({{ @type }}).build({{ nums.size }}) do |%buffer|\n          {% for num, i in nums %}\n            %buffer[{{ i }}] = {{ @type }}.new({{ num }})\n          {% end %}\n          {{ nums.size }}\n        end\n      {% end %}\n\n    \nend\n\n    getter value : Int64\n\n    def initialize\n      @value = 0i64\n    \nend\n\n    def initialize(value)\n      @value = value.to_i64 % MOD\n    \nend\n\n    def initialize(m : self)\n      @value = m.value\n    \nend\n\n    protected def value=(value : Int64)\n      @value = value\n    \nend\n\n    def ==(m : self)\n      value == m.value\n    \nend\n\n    def ==(m)\n      value == m\n    \nend\n\n    def + : self\n      self\n    \nend\n\n    def - : self\n      self.class.raw(value != 0 ? MOD &- value : 0i64)\n    \nend\n\n    def +(v)\n      self + self.class.new(v)\n    \nend\n\n    def +(m : self)\n      x = value &+ m.value\n      x &-= MOD if x >= MOD\n      self.class.raw(x)\n    \nend\n\n    def -(v)\n      self - self.class.new(v)\n    \nend\n\n    def -(m : self)\n      x = value &- m.value\n      x &+= MOD if x < 0\n      self.class.raw(x)\n    \nend\n\n    def *(v)\n      self * self.class.new(v)\n    \nend\n\n    def *(m : self)\n      self.class.new(value &* m.value)\n    \nend\n\n    def /(v)\n      self / self.class.new(v)\n    \nend\n\n    def /(m : self)\n      raise DivisionByZeroError.new if m.value == 0\n      a, b, u, v = m.value, MOD, 1i64, 0i64\n      while b != 0\n        t = a // b\n        a &-= t &* b\n        a, b = b, a\n        u &-= t &* v\n        u, v = v, u\n      \nend\n      self.class.new(value &* u)\n    \nend\n\n    def //(v)\n      self / v\n    \nend\n\n    def **(\nexponent : Int)\n      t, res = self, self.class.raw(1i64)\n      while \nexponent > 0\n        res *= t if \nexponent & 1 == 1\n        t *= t\n        \nexponent >>= 1\n      \nend\n      res\n    \nend\n\n    \n{% for op in [\"<\", \"<=\", \">\", \">=\"] of ::String %}\n      def {{ op.id }}(other)\n        raise NotImplementedError.new({{ op }})\n      end\n    {% end %}\n\n\n    def inv\n      self.class.raw(1) // self\n    \nend\n\n    def succ\n      self.class.raw(value != MOD &- 1 ? value &+ 1 : 0i64)\n    \nend\n\n    def pred\n      self.class.raw(value != 0 ? value &- 1 : MOD &- 1)\n    \nend\n\n    def abs\n      self\n    \nend\n\n    def abs2\n      self * self\n    \nend\n\n    def to_i64 : Int64\n      value\n    \nend\n\n    delegate to_s, to: @value\n    delegate inspect, to: @value\n  \nend\n\n  \n{% to = (\"to_\" + (name.stringify.downcase.gsub(/mint|modint/, \"m\"))).id %}\n\n\n  struct Int\n    \n{% for op in [\"+\", \"-\", \"*\", \"/\", \"//\"] of ::String %}\n      def {{ op.id }}(value : {{ name }})\n        {{ to }} {{ op.id }} value\n      end\n    {% end %}\n\n\n    \n{% for op in [\"<\", \"<=\", \">\", \">=\"] of ::String %}\n      def {{ op.id }}(m : {{ name }})\n        raise NotImplementedError.new({{ op }})\n      end\n    {% end %}\n\n\n    def \n{{ to }}\n : \n{{ name }}\n\n      \n{{ name }}\n.new(self)\n    \nend\n  \nend\n\n  class String\n    def \n{{ to }}\n : \n{{ name }}\n\n      \n{{ name }}\n.new(self)\n    \nend\n  \nend\n\n"}}],"types":[{"html_id":"github.com/yuruhi/crystal_lib/Array","path":"Array.html","kind":"class","full_name":"Array(T)","name":"Array","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"point.cr","line_number":227,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr"},{"filename":"array/change.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/array/change.cr"},{"filename":"array/compress.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/array/compress.cr"},{"filename":"math/gcd.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/gcd.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/yuruhi/crystal_lib/Geometric/Polygon","kind":"class","full_name":"Geometric::Polygon","name":"Polygon"}],"including_types":[],"namespace":null,"doc":"An `Array` is an ordered, integer-indexed collection of objects of type T.\n\nArray indexing starts at 0. A negative index is assumed to be\nrelative to the end of the array: -1 indicates the last element,\n-2 is the next to last element, and so on.\n\nAn `Array` can be created using the usual `new` method (several are provided), or with an array literal:\n\n```\nArray(Int32).new  # => []\n[1, 2, 3]         # Array(Int32)\n[1, \"hello\", 'x'] # Array(Int32 | String | Char)\n```\n\nAn `Array` can have mixed types, meaning T will be a union of types, but these are determined\nwhen the array is created, either by specifying T or by using an array literal. In the latter\ncase, T will be set to the union of the array literal elements' types.\n\nWhen creating an empty array you must always specify T:\n\n```\n[] of Int32 # same as Array(Int32)\n[]          # syntax error\n```\n\nAn `Array` is implemented using an internal buffer of some capacity\nand is reallocated when elements are pushed to it when more capacity\nis needed. This is normally known as a [dynamic array](http://en.wikipedia.org/wiki/Dynamic_array).\n\nYou can use a special array literal syntax with other types too, as long as they define an argless\n`new` method and a `<<` method. `Set` is one such type:\n\n```\nset = Set{1, 2, 3} # => Set{1, 2, 3}\nset.class          # => Set(Int32)\n```\n\nThe above is the same as this:\n\n```\nset = Set(typeof(1, 2, 3)).new\nset << 1\nset << 2\nset << 3\n```","summary":"<p>An <code><a href=\"Array.html\">Array</a></code> is an ordered, integer-indexed collection of objects of type T.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"[]=(point:Point,value)-instance-method","html_id":"[]=(point:Point,value)-instance-method","name":"[]=","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(point : Point, value)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L228","def":{"name":"[]=","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"index = check_index_out_of_bounds(point)\n@buffer[index.y][index.x] = value\n"}},{"id":"chmax(i:Int,value:T)-instance-method","html_id":"chmax(i:Int,value:T)-instance-method","name":"chmax","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(i : Int, value : T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/array/change.cr#L8","def":{"name":"chmax","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self[i] < value).tap do |f|\n  if f\n    self[i] = value\n  end\nend"}},{"id":"chmin(i:Int,value:T)-instance-method","html_id":"chmin(i:Int,value:T)-instance-method","name":"chmin","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(i : Int, value : T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/array/change.cr#L2","def":{"name":"chmin","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self[i] > value).tap do |f|\n  if f\n    self[i] = value\n  end\nend"}},{"id":"compress(values:Array(T))-instance-method","html_id":"compress(values:Array(T))-instance-method","name":"compress","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(T)"}],"args_string":"(values : Array(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/array/compress.cr#L2","def":{"name":"compress","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"map do |x|\n  values.bsearch_index do |y|\n    y >= x\n  end.not_nil!\nend"}},{"id":"compress:Array(Int32)-instance-method","html_id":"compress:Array(Int32)-instance-method","name":"compress","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/array/compress.cr#L8","def":{"name":"compress","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"compress(uniq.sort!)"}},{"id":"gcd_mobius-instance-method","html_id":"gcd_mobius-instance-method","name":"gcd_mobius","doc":"`a[i] = Sum_{n | i} result[i]`","summary":"<p><code>a[i] = Sum_{n | i} result[i]</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/gcd.cr#L36","def":{"name":"gcd_mobius","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dup.gcd_mobius!"}},{"id":"gcd_mobius!-instance-method","html_id":"gcd_mobius!-instance-method","name":"gcd_mobius!","doc":"`a[i] = Sum_{n | i} result[i]` (inplace)","summary":"<p><code>a[i] = Sum_{n | i} result[i]</code> (inplace)</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/gcd.cr#L23","def":{"name":"gcd_mobius!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AtCoder::Prime.each do |p|\n  if p >= size\n    break\n  end\n  i, k = 1, p\n  while k < size\n    __temp_94 = i\n    self[__temp_94] = self[__temp_94] - self[k]\n    i = i + 1\n    k = k + p\n  end\nend\nself\n"}},{"id":"gcd_zeta-instance-method","html_id":"gcd_zeta-instance-method","name":"gcd_zeta","doc":"`result[i] = Sum_{n | i} a[i]`","summary":"<p><code>result[i] = Sum_{n | i} a[i]</code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/gcd.cr#L18","def":{"name":"gcd_zeta","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dup.gcd_zeta!"}},{"id":"gcd_zeta!-instance-method","html_id":"gcd_zeta!-instance-method","name":"gcd_zeta!","doc":"`result[i] = Sum_{n | i} a[i]` (inplace)","summary":"<p><code>result[i] = Sum_{n | i} a[i]</code> (inplace)</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/gcd.cr#L5","def":{"name":"gcd_zeta!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AtCoder::Prime.each do |p|\n  if p >= size\n    break\n  end\n  i, k = size.pred // p, (size.pred // p) * p\n  while k > 0\n    __temp_92 = i\n    self[__temp_92] = self[__temp_92] + self[i * p]\n    i = i - 1\n    k = k - p\n  end\nend\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Barrett","path":"Barrett.html","kind":"struct","full_name":"Barrett","name":"Barrett","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"math/barrett.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/barrett.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(mod)-class-method","html_id":"new(mod)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":""}],"args_string":"(mod)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/barrett.cr#L4","def":{"name":"new","args":[{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mod)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"inv:UInt64-instance-method","html_id":"inv:UInt64-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/barrett.cr#L2","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@inv"}},{"id":"mod:UInt32-instance-method","html_id":"mod:UInt32-instance-method","name":"mod","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/barrett.cr#L2","def":{"name":"mod","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@mod"}},{"id":"mul(a:UInt32,b:UInt32):UInt32-instance-method","html_id":"mul(a:UInt32,b:UInt32):UInt32-instance-method","name":"mul","doc":"Caluclates `a * b % mod`.","summary":"<p>Caluclates <code>a * b % mod</code>.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"UInt32"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"UInt32"}],"args_string":"(a : UInt32, b : UInt32) : UInt32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/barrett.cr#L9","def":{"name":"mul","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"UInt32"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"z = a.to_u64 &* b\nx = ((z.to_u128 &* @inv) >> 64).to_u64!\nv = (z &- (x &* @mod)).to_u32!\nif @mod <= v\n  v = v &+ @mod\nend\nv\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/BigFloat","path":"BigFloat.html","kind":"struct","full_name":"BigFloat","name":"BigFloat","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"geometric.cr","line_number":6,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `BigFloat` can represent arbitrarily large floats.\n\nIt is implemented under the hood with [GMP](https://gmplib.org/).","summary":"<p>A <code><a href=\"BigFloat.html\">BigFloat</a></code> can represent arbitrarily large floats.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"(other:Real)-instance-method","html_id":"(other:Real)-instance-method","name":"<=>","doc":"The comparison operator. Returns `0` if the two objects are equal,\na negative number if this object is considered less than *other*,\na positive number if this object is considered greter than *other*,\nor `nil` if the two objects are not comparable.\n\nSubclasses define this method to provide class-specific ordering.\n\nThe comparison operator is usually used to sort values:\n\n```\n# Sort in a descending way:\n[3, 1, 2].sort { |x, y| y <=> x } # => [3, 2, 1]\n\n# Sort in an ascending way:\n[3, 1, 2].sort { |x, y| x <=> y } # => [1, 2, 3]\n```","summary":"<p>The comparison operator.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"args_string":"(other : Real)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L7","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if Real == BigFloat %}\n      if previous_def(other - EPS) < 0\n        -1\n      elsif previous_def(other + EPS) > 0\n        1\n      else\n        0\n      end\n    {% else %}\n      if self < other - EPS\n        -1\n      elsif self > other + EPS\n        1\n      else\n        0\n      end\n    {% end %}"}},{"id":"sgn:Int32-instance-method","html_id":"sgn:Int32-instance-method","name":"sgn","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L27","def":{"name":"sgn","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"self < (-EPS) ? -1 : self > EPS ? 1 : 0"}},{"id":"to_degree-instance-method","html_id":"to_degree-instance-method","name":"to_degree","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L35","def":{"name":"to_degree","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self * 180) / Math::PI"}},{"id":"to_radian-instance-method","html_id":"to_radian-instance-method","name":"to_radian","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L31","def":{"name":"to_radian","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self * Math::PI) / 180"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/BigFloat","path":"BigFloat.html","kind":"struct","full_name":"BigFloat","name":"BigFloat","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"geometric.cr","line_number":6,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `BigFloat` can represent arbitrarily large floats.\n\nIt is implemented under the hood with [GMP](https://gmplib.org/).","summary":"<p>A <code><a href=\"BigFloat.html\">BigFloat</a></code> can represent arbitrarily large floats.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"(other:Real)-instance-method","html_id":"(other:Real)-instance-method","name":"<=>","doc":"The comparison operator. Returns `0` if the two objects are equal,\na negative number if this object is considered less than *other*,\na positive number if this object is considered greter than *other*,\nor `nil` if the two objects are not comparable.\n\nSubclasses define this method to provide class-specific ordering.\n\nThe comparison operator is usually used to sort values:\n\n```\n# Sort in a descending way:\n[3, 1, 2].sort { |x, y| y <=> x } # => [3, 2, 1]\n\n# Sort in an ascending way:\n[3, 1, 2].sort { |x, y| x <=> y } # => [1, 2, 3]\n```","summary":"<p>The comparison operator.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"args_string":"(other : Real)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L7","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if Real == BigFloat %}\n      if previous_def(other - EPS) < 0\n        -1\n      elsif previous_def(other + EPS) > 0\n        1\n      else\n        0\n      end\n    {% else %}\n      if self < other - EPS\n        -1\n      elsif self > other + EPS\n        1\n      else\n        0\n      end\n    {% end %}"}},{"id":"sgn:Int32-instance-method","html_id":"sgn:Int32-instance-method","name":"sgn","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L27","def":{"name":"sgn","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"self < (-EPS) ? -1 : self > EPS ? 1 : 0"}},{"id":"to_degree-instance-method","html_id":"to_degree-instance-method","name":"to_degree","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L35","def":{"name":"to_degree","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self * 180) / Math::PI"}},{"id":"to_radian-instance-method","html_id":"to_radian-instance-method","name":"to_radian","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L31","def":{"name":"to_radian","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self * Math::PI) / 180"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/BinaryIndexedTree","path":"BinaryIndexedTree.html","kind":"class","full_name":"BinaryIndexedTree(T)","name":"BinaryIndexedTree","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/binary_indexed_tree.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/binary_indexed_tree.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(a:Array(T))-class-method","html_id":"new(a:Array(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"}],"args_string":"(a : Array(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/binary_indexed_tree.cr#L8","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = BinaryIndexedTree(T).allocate\n_.initialize(a)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/binary_indexed_tree.cr#L4","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = BinaryIndexedTree(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](start:Int32,count:Int32):T-instance-method","html_id":"[](start:Int32,count:Int32):T-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"args_string":"(start : Int32, count : Int32) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/binary_indexed_tree.cr#L40","def":{"name":"[]","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"(left_sum(start + count)) - (left_sum(start))"}},{"id":"[](range:Range):T-instance-method","html_id":"[](range:Range):T-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"}],"args_string":"(range : Range) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/binary_indexed_tree.cr#L44","def":{"name":"[]","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"self[*(Indexable.range_to_index_and_count(range, size)) || (raise(IndexError.new))]"}},{"id":"add(i:Int32,x):Nil-instance-method","html_id":"add(i:Int32,x):Nil-instance-method","name":"add","doc":"Add *x* to `a[i]`.","summary":"<p>Add <em>x</em> to <code>a[i]</code>.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(i : Int32, x) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/binary_indexed_tree.cr#L20","def":{"name":"add","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if 0 <= i && i < size\nelse\n  raise(IndexError.new)\nend\ni = i + 1\nwhile i <= size\n  __temp_36 = i\n  @a[__temp_36] = @a[__temp_36] + x\n  i = i + (i & (-i))\nend\n"}},{"id":"left_sum(i:Int32):T-instance-method","html_id":"left_sum(i:Int32):T-instance-method","name":"left_sum","doc":"Culculates sum of `a[0...i]`.","summary":"<p>Culculates sum of <code>a[0...i]</code>.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"args_string":"(i : Int32) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/binary_indexed_tree.cr#L30","def":{"name":"left_sum","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if 0 <= i && i <= size\nelse\n  raise(IndexError.new)\nend\nsum = T.zero\nwhile i > 0\n  sum = sum + @a[i]\n  i = i - (i & (-i))\nend\nsum\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/binary_indexed_tree.cr#L2","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"to_a:Array(T)-instance-method","html_id":"to_a:Array(T)-instance-method","name":"to_a","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/binary_indexed_tree.cr#L48","def":{"name":"to_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"(0...size).map do |i|\n  self[i..i]\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/BipartiteMatching","path":"BipartiteMatching.html","kind":"class","full_name":"BipartiteMatching","name":"BipartiteMatching","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph/bipartite_matching.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(left,right,edges:Enumerable)-class-method","html_id":"new(left,right,edges:Enumerable)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"args_string":"(left, right, edges : Enumerable)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L18","def":{"name":"new","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(left, right, edges)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(left,right)-class-method","html_id":"new(left,right)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"args_string":"(left, right)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L10","def":{"name":"new","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(left, right)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"self-instance-method","html_id":"self-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"UnweightedEdge2"}],"args_string":"(edge : UnweightedEdge2) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L23","def":{"name":"<<","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"UnweightedEdge2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if (0 <= (__temp_86 = edge.from) && __temp_86 < left) && (0 <= (__temp_87 = edge.to) && __temp_87 < right)\nelse\n  raise(IndexError.new)\nend\n@graph[edge.from] << edge.to\nself\n"}},{"id":"self-instance-method","html_id":"self-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Tuple"}],"args_string":"(edge : Tuple) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L29","def":{"name":"<<","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self << (UnweightedEdge2.new(*edge))"}},{"id":"add_edges(edges:Enumerable):self-instance-method","html_id":"add_edges(edges:Enumerable):self-instance-method","name":"add_edges","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"args_string":"(edges : Enumerable) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L33","def":{"name":"add_edges","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"edges.each do |edge|\n  self << edge\nend\nself\n"}},{"id":"each(&):Nil-instance-method","html_id":"each(&amp;):Nil-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"args":[],"args_string":"(&) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L59","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(0...left).each do |i|\n  if l = @left_match[i]\n    yield UnweightedEdge2.new(i, l)\n  end\nend"}},{"id":"each-instance-method","html_id":"each-instance-method","name":"each","doc":"Must return an `Iterator` over the elements in this collection.","summary":"<p>Must return an <code>Iterator</code> over the elements in this collection.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L67","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(0...left).each.select do |i|\n  @left_match[i]\nend.map do |i|\n  UnweightedEdge2.new(i, @left_match[i].not_nil!)\nend"}},{"id":"graph:Array(Array(Int32))-instance-method","html_id":"graph:Array(Array(Int32))-instance-method","name":"graph","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Array(Int32))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L8","def":{"name":"graph","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Array(Int32))","visibility":"Public","body":"@graph"}},{"id":"left:Int32-instance-method","html_id":"left:Int32-instance-method","name":"left","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L7","def":{"name":"left","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@left"}},{"id":"right:Int32-instance-method","html_id":"right:Int32-instance-method","name":"right","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L7","def":{"name":"right","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@right"}},{"id":"solve:Int32-instance-method","html_id":"solve:Int32-instance-method","name":"solve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_matching.cr#L50","def":{"name":"solve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"while (0...left).reduce(false) do |update, i|\n  update | (@left_match[i].nil? && (dfs(i)))\nend\n  @used.fill(false)\nend\nleft - @left_match.count do |__arg0|\n  __arg0.nil?\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Combination","path":"Combination.html","kind":"class","full_name":"Combination(T)","name":"Combination","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"math/combination.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/combination.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(initial_capacity:Int=2)-class-method","html_id":"new(initial_capacity:Int=2)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"initial_capacity","doc":null,"default_value":"2","external_name":"initial_capacity","restriction":"Int"}],"args_string":"(initial_capacity : Int = <span class=\"n\">2</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/combination.cr#L2","def":{"name":"new","args":[{"name":"initial_capacity","doc":null,"default_value":"2","external_name":"initial_capacity","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Combination(T).allocate\n_.initialize(initial_capacity)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"combination(n:Int,r:Int)-instance-method","html_id":"combination(n:Int,r:Int)-instance-method","name":"combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int"}],"args_string":"(n : Int, r : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/combination.cr#L42","def":{"name":"combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((n < r || n < 0) || r < 0) ? T.zero : ((factorial(n)) * (finv(r))) * (finv(n - r))"}},{"id":"factorial(n:Int)-instance-method","html_id":"factorial(n:Int)-instance-method","name":"factorial","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"args_string":"(n : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/combination.cr#L23","def":{"name":"factorial","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"expand_until(n)\n@factorial.unsafe_fetch(n)\n"}},{"id":"finv(n:Int)-instance-method","html_id":"finv(n:Int)-instance-method","name":"finv","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"args_string":"(n : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/combination.cr#L33","def":{"name":"finv","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"expand_until(n)\n@finv.unsafe_fetch(n)\n"}},{"id":"inv(n:Int)-instance-method","html_id":"inv(n:Int)-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"args_string":"(n : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/combination.cr#L28","def":{"name":"inv","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"expand_until(n)\n@inv.unsafe_fetch(n)\n"}},{"id":"permutation(n:Int,r:Int)-instance-method","html_id":"permutation(n:Int,r:Int)-instance-method","name":"permutation","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int"}],"args_string":"(n : Int, r : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/combination.cr#L38","def":{"name":"permutation","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((n < r || n < 0) || r < 0) ? T.zero : (factorial(n)) * (finv(n - r))"}},{"id":"repeated_combination(n:Int,r:Int)-instance-method","html_id":"repeated_combination(n:Int,r:Int)-instance-method","name":"repeated_combination","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int"}],"args_string":"(n : Int, r : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/combination.cr#L46","def":{"name":"repeated_combination","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(n < 0 || r < 0) ? T.zero : r == 0 ? T.new(1) : combination((n + r) - 1, r)"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","path":"Comparable.html","kind":"module","full_name":"Comparable(T)","name":"Comparable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"comparable/min_max.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/comparable/min_max.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/yuruhi/crystal_lib/Array","kind":"class","full_name":"Array(T)","name":"Array"},{"html_id":"github.com/yuruhi/crystal_lib/BigFloat","kind":"struct","full_name":"BigFloat","name":"BigFloat"},{"html_id":"github.com/yuruhi/crystal_lib/Geometric/Vec2","kind":"struct","full_name":"Geometric::Vec2","name":"Vec2"},{"html_id":"github.com/yuruhi/crystal_lib/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/yuruhi/crystal_lib/Point","kind":"struct","full_name":"Point","name":"Point"},{"html_id":"github.com/yuruhi/crystal_lib/String","kind":"class","full_name":"String","name":"String"},{"html_id":"github.com/yuruhi/crystal_lib/WeightedEdge","kind":"struct","full_name":"WeightedEdge(T)","name":"WeightedEdge"},{"html_id":"github.com/yuruhi/crystal_lib/WeightedEdge2","kind":"struct","full_name":"WeightedEdge2(T)","name":"WeightedEdge2"}],"namespace":null,"doc":"The `Comparable` mixin is used by classes whose objects may be ordered.\n\nIncluding types must provide an `<=>` method, which compares the receiver against\nanother object, returning:\n- a negative number if `self` is less than the other object\n- a positive number if `self` is greater than the other object\n- `0` if `self` is equal to the other object\n- `nil` if `self` and the other object are not comparable\n\n`Comparable` uses `<=>` to implement the conventional comparison operators\n(`<`, `<=`, `==`, `>=`, and `>`). All of these return `false` when `<=>`\nreturns `nil`.\n\nNote that returning `nil` is only useful when defining a partial comparable\nrelationship. One such example is float values: they are generally comparable,\nexcept for `NaN`. If none of the values of a type are comparable between each\nother, `Comparable` shouldn't be included.\n\nNOTE: When `nil` is returned from `<=>`, `Array#sort` and related sorting\nmethods will perform slightly slower.","summary":"<p>The <code><a href=\"Comparable.html\">Comparable</a></code> mixin is used by classes whose objects may be ordered.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"max(x:T)-instance-method","html_id":"max(x:T)-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"args_string":"(x : T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/comparable/min_max.cr#L6","def":{"name":"max","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self < x ? x : self"}},{"id":"min(x:T)-instance-method","html_id":"min(x:T)-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"args_string":"(x : T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/comparable/min_max.cr#L2","def":{"name":"min","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self > x ? x : self"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/CulSum","path":"CulSum.html","kind":"class","full_name":"CulSum(T)","name":"CulSum","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/cul_sum.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"build(a:Enumerable(T))-class-method","html_id":"build(a:Enumerable(T))-class-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Enumerable(T)"}],"args_string":"(a : Enumerable(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum.cr#L2","def":{"name":"build","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Enumerable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = [T.zero]\na.each do |x|\n  result << (result[-1] + x)\nend\nresult\n"}}],"constructors":[{"id":"new(a:Array(T))-class-method","html_id":"new(a:Array(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"}],"args_string":"(a : Array(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum.cr#L10","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = CulSum(T).allocate\n_.initialize(a)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(n:Int32,&)-class-method","html_id":"new(n:Int32,&amp;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"}],"args_string":"(n : Int32, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum.cr#L18","def":{"name":"new","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = CulSum(T).allocate\n_.initialize(n) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(a,&)-class-method","html_id":"new(a,&amp;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""}],"args_string":"(a, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum.cr#L25","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = CulSum(T).allocate\n_.initialize(a) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](left:Int32,count:Int32):T-instance-method","html_id":"[](left:Int32,count:Int32):T-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"args_string":"(left : Int32, count : Int32) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum.cr#L33","def":{"name":"[]","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"Int32"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@s[left + count] - @s[left]"}},{"id":"[](range:Range):T-instance-method","html_id":"[](range:Range):T-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"}],"args_string":"(range : Range) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum.cr#L37","def":{"name":"[]","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"self[*(Indexable.range_to_index_and_count(range, @n)) || (raise(IndexError.new))]"}},{"id":"to_a:Array(T)-instance-method","html_id":"to_a:Array(T)-instance-method","name":"to_a","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum.cr#L41","def":{"name":"to_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"(0...@n).map do |i|\n  self[i..i]\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/CulSum2D","path":"CulSum2D.html","kind":"class","full_name":"CulSum2D(T)","name":"CulSum2D","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/cul_sum_2d.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(a:Array(Array(T)))-class-method","html_id":"new(a:Array(Array(T)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(Array(T))"}],"args_string":"(a : Array(Array(T)))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr#L5","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(Array(T))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = CulSum2D(T).allocate\n_.initialize(a)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(height:Int32,width:Int32,&)-class-method","html_id":"new(height:Int32,width:Int32,&amp;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(height : Int32, width : Int32, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr#L26","def":{"name":"new","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = CulSum2D(T).allocate\n_.initialize(height, width) do |_arg0, _arg1|\n  yield _arg0, _arg1\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](ys:Int,yc:Int,xs:Int,xc:Int):T-instance-method","html_id":"[](ys:Int,yc:Int,xs:Int,xc:Int):T-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"ys","doc":null,"default_value":"","external_name":"ys","restriction":"Int"},{"name":"yc","doc":null,"default_value":"","external_name":"yc","restriction":"Int"},{"name":"xs","doc":null,"default_value":"","external_name":"xs","restriction":"Int"},{"name":"xc","doc":null,"default_value":"","external_name":"xc","restriction":"Int"}],"args_string":"(ys : Int, yc : Int, xs : Int, xc : Int) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr#L68","def":{"name":"[]","args":[{"name":"ys","doc":null,"default_value":"","external_name":"ys","restriction":"Int"},{"name":"yc","doc":null,"default_value":"","external_name":"yc","restriction":"Int"},{"name":"xs","doc":null,"default_value":"","external_name":"xs","restriction":"Int"},{"name":"xc","doc":null,"default_value":"","external_name":"xc","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"self[ys, yc, xs, xc]? || (raise(IndexError.new))"}},{"id":"[](y_range:Range,x_range:Range):T-instance-method","html_id":"[](y_range:Range,x_range:Range):T-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"y_range","doc":null,"default_value":"","external_name":"y_range","restriction":"Range"},{"name":"x_range","doc":null,"default_value":"","external_name":"x_range","restriction":"Range"}],"args_string":"(y_range : Range, x_range : Range) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr#L72","def":{"name":"[]","args":[{"name":"y_range","doc":null,"default_value":"","external_name":"y_range","restriction":"Range"},{"name":"x_range","doc":null,"default_value":"","external_name":"x_range","restriction":"Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"self[y_range, x_range]? || (raise(IndexError.new))"}},{"id":"[]?(y_start:Int,y_count:Int,x_start:Int,x_count:Int):T?-instance-method","html_id":"[]?(y_start:Int,y_count:Int,x_start:Int,x_count:Int):T?-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"y_start","doc":null,"default_value":"","external_name":"y_start","restriction":"Int"},{"name":"y_count","doc":null,"default_value":"","external_name":"y_count","restriction":"Int"},{"name":"x_start","doc":null,"default_value":"","external_name":"x_start","restriction":"Int"},{"name":"x_count","doc":null,"default_value":"","external_name":"x_count","restriction":"Int"}],"args_string":"(y_start : Int, y_count : Int, x_start : Int, x_count : Int) : T?","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr#L47","def":{"name":"[]?","args":[{"name":"y_start","doc":null,"default_value":"","external_name":"y_start","restriction":"Int"},{"name":"y_count","doc":null,"default_value":"","external_name":"y_count","restriction":"Int"},{"name":"x_start","doc":null,"default_value":"","external_name":"x_start","restriction":"Int"},{"name":"x_count","doc":null,"default_value":"","external_name":"x_count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"if y_count >= 0\nelse\n  raise(ArgumentError.new(\"Negative y_count: #{y_count}\"))\nend\nif x_count >= 0\nelse\n  raise(ArgumentError.new(\"Negative x_count: #{x_count}\"))\nend\nif y_start < 0\n  y_start = y_start + height\nend\nif x_start < 0\n  x_start = x_start + width\nend\nif (0 <= y_start && y_start <= height) && (0 <= x_start && x_start <= width)\n  y_count = Math.min(y_count, height - y_start)\n  x_count = Math.min(x_count, width - x_start)\n  ((@sum[y_start + y_count][x_start + x_count] - @sum[y_start + y_count][x_start]) - @sum[y_start][x_start + x_count]) + @sum[y_start][x_start]\nend\n"}},{"id":"[]?(y_range:Range,x_range:Range):T?-instance-method","html_id":"[]?(y_range:Range,x_range:Range):T?-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"y_range","doc":null,"default_value":"","external_name":"y_range","restriction":"Range"},{"name":"x_range","doc":null,"default_value":"","external_name":"x_range","restriction":"Range"}],"args_string":"(y_range : Range, x_range : Range) : T?","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr#L62","def":{"name":"[]?","args":[{"name":"y_range","doc":null,"default_value":"","external_name":"y_range","restriction":"Range"},{"name":"x_range","doc":null,"default_value":"","external_name":"x_range","restriction":"Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"ys, yc = (Indexable.range_to_index_and_count(y_range, height)) || (return nil)\nxs, xc = (Indexable.range_to_index_and_count(x_range, width)) || (return nil)\nself[ys, yc, xs, xc]?\n"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr#L2","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@height"}},{"id":"to_a:Array(Array(T))-instance-method","html_id":"to_a:Array(Array(T))-instance-method","name":"to_a","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Array(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr#L76","def":{"name":"to_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Array(T))","visibility":"Public","body":"Array.new(height) do |i|\n  Array.new(width) do |j|\n    self[i, 1, j, 1]\n  end\nend"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/cul_sum_2d.cr#L3","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@width"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/DirectedGraph","path":"DirectedGraph.html","kind":"class","full_name":"DirectedGraph(T)","name":"DirectedGraph","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Graph","kind":"module","full_name":"Graph","name":"Graph"},{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph.cr","line_number":62,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Graph","kind":"module","full_name":"Graph","name":"Graph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"directed?-class-method","html_id":"directed?-class-method","name":"directed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L87","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"true"}},{"id":"weighted?-class-method","html_id":"weighted?-class-method","name":"weighted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L83","def":{"name":"weighted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"true"}}],"constructors":[{"id":"new(size:Int,edges:Enumerable(WeightedEdge2(T)))-class-method","html_id":"new(size:Int,edges:Enumerable(WeightedEdge2(T)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(WeightedEdge2(T))"}],"args_string":"(size : Int, edges : Enumerable(WeightedEdge2(T)))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L69","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(WeightedEdge2(T))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DirectedGraph(T).allocate\n_.initialize(size, edges)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int,edges:Enumerable(::Tuple(Int32,Int32,T)))-class-method","html_id":"new(size:Int,edges:Enumerable(::Tuple(Int32,Int32,T)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(::Tuple(Int32, Int32, T))"}],"args_string":"(size : Int, edges : Enumerable(::Tuple(Int32, Int32, T)))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L73","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(::Tuple(Int32, Int32, T))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DirectedGraph(T).allocate\n_.initialize(size, edges)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int)-class-method","html_id":"new(size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L65","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DirectedGraph(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(edge:WeightedEdge2(T))-instance-method","html_id":"&lt;&lt;(edge:WeightedEdge2(T))-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"WeightedEdge2(T)"}],"args_string":"(edge : WeightedEdge2(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L77","def":{"name":"<<","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"WeightedEdge2(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (0 <= (__temp_24 = edge.from) && __temp_24 < size) && (0 <= (__temp_25 = edge.to) && __temp_25 < size)\nelse\n  raise(IndexError.new)\nend\n@graph[edge.from] << (WeightedEdge.new(edge.to, edge.cost))\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/DP","path":"DP.html","kind":"module","full_name":"DP","name":"DP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"dp/inversion.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/dp/inversion.cr"},{"filename":"dp/knapsack.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/dp/knapsack.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/yuruhi/crystal_lib/DP","kind":"module","full_name":"DP","name":"DP"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"inversion(a:Array(T)):Int64forallT-instance-method","html_id":"inversion(a:Array(T)):Int64forallT-instance-method","name":"inversion","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"}],"args_string":"(a : Array(T)) : Int64 forall T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/dp/inversion.cr#L6","def":{"name":"inversion","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"bit = BinaryIndexedTree(Int32).new(a.max + 1)\na.sum(0_i64) do |x|\n  bit[(x + 1)..].tap do\n    bit.add(x, 1)\n  end\nend\n"}},{"id":"knapsack(weight_limit:Int32,value:Array(Int),weight:Array(Int32))-instance-method","html_id":"knapsack(weight_limit:Int32,value:Array(Int),weight:Array(Int32))-instance-method","name":"knapsack","doc":null,"summary":null,"abstract":false,"args":[{"name":"weight_limit","doc":null,"default_value":"","external_name":"weight_limit","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array(Int)"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Array(Int32)"}],"args_string":"(weight_limit : Int32, value : Array(Int), weight : Array(Int32))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/dp/knapsack.cr#L4","def":{"name":"knapsack","args":[{"name":"weight_limit","doc":null,"default_value":"","external_name":"weight_limit","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array(Int)"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value.size == weight.size\nelse\n  raise(ArgumentError.new)\nend\nn = value.size\n(0...n).each_with_object([(typeof(value.first)).zero] * weight_limit.succ) do |i, dp|\n  (0..(weight_limit - weight[i])).each do |j|\n    dp[j + weight[i]] = Math.max(dp[j + weight[i]], dp[j] + value[i])\n  end\nend\n"}},{"id":"knapsack01(weight_limit:Int32,value:Array(Int),weight:Array(Int32))-instance-method","html_id":"knapsack01(weight_limit:Int32,value:Array(Int),weight:Array(Int32))-instance-method","name":"knapsack01","doc":null,"summary":null,"abstract":false,"args":[{"name":"weight_limit","doc":null,"default_value":"","external_name":"weight_limit","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array(Int)"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Array(Int32)"}],"args_string":"(weight_limit : Int32, value : Array(Int), weight : Array(Int32))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/dp/knapsack.cr#L14","def":{"name":"knapsack01","args":[{"name":"weight_limit","doc":null,"default_value":"","external_name":"weight_limit","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Array(Int)"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value.size == weight.size\nelse\n  raise(ArgumentError.new)\nend\nn = value.size\n(0...n).each_with_object([(typeof(value.first)).zero] * weight_limit.succ) do |i, dp|\n  (0..(weight_limit - weight[i])).reverse_each do |j|\n    dp[j + weight[i]] = Math.max(dp[j + weight[i]], dp[j] + value[i])\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/DynamicMint","path":"DynamicMint.html","kind":"struct","full_name":"DynamicMint","name":"DynamicMint","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"math/dynamic_mint.cr","line_number":4,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"mod:Int32-class-method","html_id":"mod:Int32-class-method","name":"mod","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L8","def":{"name":"mod","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@@bt.mod.to_i"}},{"id":"mod=(m:Int32)-class-method","html_id":"mod=(m:Int32)-class-method","name":"mod=","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Int32"}],"args_string":"(m : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L12","def":{"name":"mod=","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if 1 <= m\nelse\n  raise(ArgumentError.new)\nend\n@@bt = Barrett.new(m.to_u32)\n"}},{"id":"raw(v:Int32)-class-method","html_id":"raw(v:Int32)-class-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int32"}],"args_string":"(v : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L17","def":{"name":"raw","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = Mint.new\nresult.value = v\nresult\n"}},{"id":"raw(v)-class-method","html_id":"raw(v)-class-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L23","def":{"name":"raw","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = Mint.new\nresult.value = v.to_i!\nresult\n"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L29","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Mint.new"}}],"constructors":[{"id":"new(x:self)-class-method","html_id":"new(x:self)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"self"}],"args_string":"(x : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L43","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(x:Int)-class-method","html_id":"new(x:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"args_string":"(x : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L47","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L39","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(v)-instance-method","html_id":"*(v)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L79","def":{"name":"*","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Mint.raw(@@bt.mul(value.to_u!, (Mint.new(v)).value.to_u!))"}},{"id":"**(exponent:Int)-instance-method","html_id":"**(exponent:Int)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"exponent","doc":null,"default_value":"","external_name":"exponent","restriction":"Int"}],"args_string":"(exponent : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L91","def":{"name":"**","args":[{"name":"exponent","doc":null,"default_value":"","external_name":"exponent","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t, res = self, Mint.raw(1)\nwhile exponent > 0\n  if (exponent & 1) == 1\n    res = res * t\n  end\n  t = t * t\n  exponent = exponent >> 1\nend\nres\n"}},{"id":"+(v)-instance-method","html_id":"+(v)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L67","def":{"name":"+","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = value &+ (Mint.new(v)).value\nif x >= Mint.mod\n  x = x &- Mint.mod\nend\nMint.raw(x)\n"}},{"id":"+-instance-method","html_id":"+-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L59","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"-(v)-instance-method","html_id":"-(v)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L73","def":{"name":"-","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = value &- (Mint.new(v)).value\nif x < 0\n  x = x &+ Mint.mod\nend\nMint.raw(x)\n"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L63","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Mint.raw(value == 0 ? 0 : Mint.mod &- value)"}},{"id":"/(v)-instance-method","html_id":"/(v)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L83","def":{"name":"/","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * (Mint.new(v)).inv"}},{"id":"//(v)-instance-method","html_id":"//(v)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L87","def":{"name":"//","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / v"}},{"id":"<(other)-instance-method","html_id":"&lt;(other)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L128","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<=(other)-instance-method","html_id":"&lt;=(other)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L128","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":"==(v:self)-instance-method","html_id":"==(v:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"self"}],"args_string":"(v : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L51","def":{"name":"==","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == v.value"}},{"id":"==(v)-instance-method","html_id":"==(v)-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L55","def":{"name":"==","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == v"}},{"id":">(other)-instance-method","html_id":"&gt;(other)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L128","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">=(other)-instance-method","html_id":"&gt;=(other)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L128","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":"abs-instance-method","html_id":"abs-instance-method","name":"abs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L113","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"abs2-instance-method","html_id":"abs2-instance-method","name":"abs2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L117","def":{"name":"abs2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * self"}},{"id":"inspect(*args,**options,&)-instance-method","html_id":"inspect(*args,**options,&amp;)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L126","def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"inspect(*args,**options)-instance-method","html_id":"inspect(*args,**options)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L126","def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options)"}},{"id":"inv-instance-method","html_id":"inv-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L101","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Mint.raw(AtCoder::Math.inv_mod(value, Mint.mod))"}},{"id":"pred-instance-method","html_id":"pred-instance-method","name":"pred","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L109","def":{"name":"pred","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Mint.raw(value == 0 ? Mint.mod &- 1 : value &- 1)"}},{"id":"succ-instance-method","html_id":"succ-instance-method","name":"succ","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L105","def":{"name":"succ","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Mint.raw(value == (Mint.mod &- 1) ? 0 : value &+ 1)"}},{"id":"to_i64:Int64-instance-method","html_id":"to_i64:Int64-instance-method","name":"to_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L121","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"value.to_i64"}},{"id":"to_s(*args,**options,&)-instance-method","html_id":"to_s(*args,**options,&amp;)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L125","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L125","def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options)"}},{"id":"value:Int32-instance-method","html_id":"value:Int32-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr#L33","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@value"}}],"macros":[],"types":[{"html_id":"github.com/yuruhi/crystal_lib/DynamicMint/Mint","path":"DynamicMint/Mint.html","kind":"alias","full_name":"DynamicMint::Mint","name":"Mint","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"math/dynamic_mint.cr","line_number":6,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/dynamic_mint.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":true,"aliased":"DynamicMint","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/yuruhi/crystal_lib/DynamicMint","kind":"struct","full_name":"DynamicMint","name":"DynamicMint"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","path":"Enumerable.html","kind":"module","full_name":"Enumerable(T)","name":"Enumerable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"enumerable/mex.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/enumerable/mex.cr"},{"filename":"enumerable/scan.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/enumerable/scan.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/yuruhi/crystal_lib/BipartiteMatching","kind":"class","full_name":"BipartiteMatching","name":"BipartiteMatching"},{"html_id":"github.com/yuruhi/crystal_lib/Graph","kind":"module","full_name":"Graph(Edge, Edge2)","name":"Graph"},{"html_id":"github.com/yuruhi/crystal_lib/Indexable","kind":"module","full_name":"Indexable(T)","name":"Indexable"},{"html_id":"github.com/yuruhi/crystal_lib/MultiSet","kind":"class","full_name":"MultiSet(T)","name":"MultiSet"}],"namespace":null,"doc":"The `Enumerable` mixin provides collection classes with several traversal, searching,\nfiltering and querying methods.\n\nIncluding types must provide an `each` method, which yields successive members\nof the collection.\n\nFor example:\n\n```\nclass Three\n  include Enumerable(Int32)\n\n  def each\n    yield 1\n    yield 2\n    yield 3\n  end\nend\n\nthree = Three.new\nthree.to_a                # => [1, 2, 3]\nthree.select &.odd?       # => [1, 3]\nthree.all? { |x| x < 10 } # => true\n```\n\nNote that most search and filter methods traverse an Enumerable eagerly,\nproducing an `Array` as the result. For a lazy alternative refer to\nthe `Iterator` and `Iterable` modules.","summary":"<p>The <code><a href=\"Enumerable.html\">Enumerable</a></code> mixin provides collection classes with several traversal, searching, filtering and querying methods.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"inclusive_scan(&)-instance-method","html_id":"inclusive_scan(&amp;)-instance-method","name":"inclusive_scan","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/enumerable/scan.cr#L16","def":{"name":"inclusive_scan","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"first = true\nresult = [] of T\neach do |v|\n  if first\n    result << v\n    first = false\n  else\n    result << (yield result[-1], v)\n  end\nend\nresult\n"}},{"id":"inclusive_scan-instance-method","html_id":"inclusive_scan-instance-method","name":"inclusive_scan","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/enumerable/scan.cr#L30","def":{"name":"inclusive_scan","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"inclusive_scan do |x, y|\n  x + y\nend"}},{"id":"mex:T-instance-method","html_id":"mex:T-instance-method","name":"mex","doc":"Returns the minimum value of the complement set.","summary":"<p>Returns the minimum value of the complement set.</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/enumerable/mex.cr#L12","def":{"name":"mex","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"to_a.sort!.mex_sorted"}},{"id":"mex_sorted:T-instance-method","html_id":"mex_sorted:T-instance-method","name":"mex_sorted","doc":"Returns the minimum value of the complement set.","summary":"<p>Returns the minimum value of the complement set.</p>","abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/enumerable/mex.cr#L3","def":{"name":"mex_sorted","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"reduce(T.zero) do |now, x|\n  if x < T.zero\n    next now\n  end\n  if now < x\n    return now\n  end\n  x.succ\nend"}},{"id":"scan(init:U)forallU-instance-method","html_id":"scan(init:U)forallU-instance-method","name":"scan","doc":null,"summary":null,"abstract":false,"args":[{"name":"init","doc":null,"default_value":"","external_name":"init","restriction":"U"}],"args_string":"(init : U) forall U","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/enumerable/scan.cr#L2","def":{"name":"scan","args":[{"name":"init","doc":null,"default_value":"","external_name":"init","restriction":"U"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scan(init) do |a, b|\n  a + b\nend"}},{"id":"scan-instance-method","html_id":"scan-instance-method","name":"scan","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/enumerable/scan.cr#L6","def":{"name":"scan","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"scan(T.zero)"}},{"id":"scan(init:U,&)forallU-instance-method","html_id":"scan(init:U,&amp;)forallU-instance-method","name":"scan","doc":null,"summary":null,"abstract":false,"args":[{"name":"init","doc":null,"default_value":"","external_name":"init","restriction":"U"}],"args_string":"(init : U, &) forall U","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/enumerable/scan.cr#L10","def":{"name":"scan","args":[{"name":"init","doc":null,"default_value":"","external_name":"init","restriction":"U"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"result = [init]\neach do |v|\n  result << (yield result.last, v)\nend\nresult\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/EulerTourForVertex","path":"EulerTourForVertex.html","kind":"class","full_name":"EulerTourForVertex","name":"EulerTourForVertex","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph/euler_tour_for_vertex.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(graph)-class-method","html_id":"new(graph)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":""}],"args_string":"(graph)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L4","def":{"name":"new","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(graph)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L11","def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph[*args, **options]"}},{"id":"[](*args,**options,&)-instance-method","html_id":"[](*args,**options,&amp;)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L11","def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"add_edge(*args,**options)-instance-method","html_id":"add_edge(*args,**options)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L12","def":{"name":"add_edge","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.add_edge(*args, **options)"}},{"id":"add_edge(*args,**options,&)-instance-method","html_id":"add_edge(*args,**options,&amp;)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L12","def":{"name":"add_edge","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.add_edge(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"dfs(v:Int32,p:Int32):Nil-instance-method","html_id":"dfs(v:Int32,p:Int32):Nil-instance-method","name":"dfs","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int32"},{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Int32"}],"args_string":"(v : Int32, p : Int32) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L14","def":{"name":"dfs","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int32"},{"name":"p","doc":null,"default_value":"","external_name":"p","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@ls[v] = @k\n@k = @k + 1\n@graph[v].each do |u|\n  if u != p\n    dfs(u, v)\n  end\nend\n@rs[v] = @k\n"}},{"id":"graph:UnweightedUndirectedGraph-instance-method","html_id":"graph:UnweightedUndirectedGraph-instance-method","name":"graph","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UnweightedUndirectedGraph","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L2","def":{"name":"graph","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UnweightedUndirectedGraph","visibility":"Public","body":"@graph"}},{"id":"run(root:Int32)-instance-method","html_id":"run(root:Int32)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int32"}],"args_string":"(root : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L23","def":{"name":"run","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dfs(root, -1)\n{@ls, @rs}\n"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L10","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options)"}},{"id":"size(*args,**options,&)-instance-method","html_id":"size(*args,**options,&amp;)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/euler_tour_for_vertex.cr#L10","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/GCD","path":"GCD.html","kind":"module","full_name":"GCD","name":"GCD","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"math/gcd.cr","line_number":41,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/gcd.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/yuruhi/crystal_lib/GCD","kind":"module","full_name":"GCD","name":"GCD"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"convolution(f:Array(T),g:Array(T))forallT-instance-method","html_id":"convolution(f:Array(T),g:Array(T))forallT-instance-method","name":"convolution","doc":"`result[n] = Sum_{gcd(i, j) = n} f[i] * g[j]`","summary":"<p><code>result[n] = Sum_{gcd(i, j) = n} f[i] * g[j]</code></p>","abstract":false,"args":[{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"Array(T)"},{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":"Array(T)"}],"args_string":"(f : Array(T), g : Array(T)) forall T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/gcd.cr#L45","def":{"name":"convolution","args":[{"name":"f","doc":null,"default_value":"","external_name":"f","restriction":"Array(T)"},{"name":"g","doc":null,"default_value":"","external_name":"g","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(f.gcd_zeta.zip?(g.gcd_zeta)).map do |x, y|\n  (x || T.zero) * (y || T.zero)\nend.gcd_mobius!"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Geometric","path":"Geometric.html","kind":"module","full_name":"Geometric","name":"Geometric","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"geometric.cr","line_number":40,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Geometric","kind":"module","full_name":"Geometric","name":"Geometric"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"angle(a:Vec2,b:Vec2,c:Vec2)-instance-method","html_id":"angle(a:Vec2,b:Vec2,c:Vec2)-instance-method","name":"angle","doc":"Calclates the angle of `∠abc`","summary":"<p>Calclates the angle of <code>∠abc</code></p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Vec2"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Vec2"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Vec2"}],"args_string":"(a : Vec2, b : Vec2, c : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L223","def":{"name":"angle","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Vec2"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Vec2"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((c - b).rotate(-(a - b).angle)).angle"}},{"id":"ccw(a:Vec2,b:Vec2,c:Vec2):Int32-instance-method","html_id":"ccw(a:Vec2,b:Vec2,c:Vec2):Int32-instance-method","name":"ccw","doc":"AB から見て BC が左に曲がる   : `+1`\n\nAB から見て BC が右に曲がる   : `-1`\n\nABC, CBA の順に一直線上に並ぶ : `+2`\n\nACB, BCA の順に一直線上に並ぶ :  `0`\n\nBAC, CAB の順に一直線上に並ぶ : `-2`","summary":"<p>AB から見て BC が左に曲がる   : <code>+1</code></p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Vec2"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Vec2"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Vec2"}],"args_string":"(a : Vec2, b : Vec2, c : Vec2) : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L209","def":{"name":"ccw","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Vec2"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Vec2"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"x = ((b - a).cross(c - a)).sgn\nif x != 0\n  x\nelse\n  if ((b - a).dot(c - b)).sgn > 0\n    2\n  else\n    if ((a - b).dot(c - a)).sgn > 0\n      -2\n    else\n      0\n    end\n  end\nend\n"}},{"id":"distance(v1:Vec2,v2:Vec2)-instance-method","html_id":"distance(v1:Vec2,v2:Vec2)-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"v1","doc":null,"default_value":"","external_name":"v1","restriction":"Vec2"},{"name":"v2","doc":null,"default_value":"","external_name":"v2","restriction":"Vec2"}],"args_string":"(v1 : Vec2, v2 : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L227","def":{"name":"distance","args":[{"name":"v1","doc":null,"default_value":"","external_name":"v1","restriction":"Vec2"},{"name":"v2","doc":null,"default_value":"","external_name":"v2","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.hypot(v1.x - v2.x, v1.y - v2.y)"}},{"id":"distance(v:Vec2,c:Circle)-instance-method","html_id":"distance(v:Vec2,c:Circle)-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Vec2"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Circle"}],"args_string":"(v : Vec2, c : Circle)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L231","def":{"name":"distance","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Vec2"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Circle"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((distance(v, c.center)) - c.radious).abs"}},{"id":"distance(c1:Circle,c2:Circle)-instance-method","html_id":"distance(c1:Circle,c2:Circle)-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"c1","doc":null,"default_value":"","external_name":"c1","restriction":"Circle"},{"name":"c2","doc":null,"default_value":"","external_name":"c2","restriction":"Circle"}],"args_string":"(c1 : Circle, c2 : Circle)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L235","def":{"name":"distance","args":[{"name":"c1","doc":null,"default_value":"","external_name":"c1","restriction":"Circle"},{"name":"c2","doc":null,"default_value":"","external_name":"c2","restriction":"Circle"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"d = distance(c1.center, c2.center)\nr = c1.radious + c2.radious\nif d > r\n  d - r\nelse\n  if (d + c1.radious) < c2.radious\n    c2.radious - (d + c1.radious)\n  else\n    if (d + c2.radious) < c1.radious\n      c1.radious - (d + c2.radious)\n    else\n      Real.zero\n    end\n  end\nend\n"}},{"id":"distance(object1:Circle,object2:Vec2)-instance-method","html_id":"distance(object1:Circle,object2:Vec2)-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"object1","doc":null,"default_value":"","external_name":"object1","restriction":"Circle"},{"name":"object2","doc":null,"default_value":"","external_name":"object2","restriction":"Vec2"}],"args_string":"(object1 : Circle, object2 : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L255","def":{"name":"distance","args":[{"name":"object1","doc":null,"default_value":"","external_name":"object1","restriction":"Circle"},{"name":"object2","doc":null,"default_value":"","external_name":"object2","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"distance(object2, object1)"}}],"macros":[{"id":"delegate_method(method,type1,type2)-macro","html_id":"delegate_method(method,type1,type2)-macro","name":"delegate_method","doc":null,"summary":null,"abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"type1","doc":null,"default_value":"","external_name":"type1","restriction":""},{"name":"type2","doc":null,"default_value":"","external_name":"type2","restriction":""}],"args_string":"(method, type1, type2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L249","def":{"name":"delegate_method","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"type1","doc":null,"default_value":"","external_name":"type1","restriction":""},{"name":"type2","doc":null,"default_value":"","external_name":"type2","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def \n{{ method }}\n(object1 : \n{{ type1 }}\n, object2 : \n{{ type2 }}\n)\n      \n{{ method }}\n(object2, object1)\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/yuruhi/crystal_lib/Geometric/Circle","path":"Geometric/Circle.html","kind":"struct","full_name":"Geometric::Circle","name":"Circle","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"geometric.cr","line_number":111,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/yuruhi/crystal_lib/Geometric","kind":"module","full_name":"Geometric","name":"Geometric"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(x,y,radious)-class-method","html_id":"new(x,y,radious)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"radious","doc":null,"default_value":"","external_name":"radious","restriction":""}],"args_string":"(x, y, radious)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L118","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"radious","doc":null,"default_value":"","external_name":"radious","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y, radious)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(center:Vec2,radious)-class-method","html_id":"new(center:Vec2,radious)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vec2"},{"name":"radious","doc":null,"default_value":"","external_name":"radious","restriction":""}],"args_string":"(center : Vec2, radious)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L114","def":{"name":"new","args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vec2"},{"name":"radious","doc":null,"default_value":"","external_name":"radious","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(center, radious)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(other:Real)-instance-method","html_id":"*(other:Real)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"args_string":"(other : Real)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L125","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Circle.new(x * other, y * other, radious)"}},{"id":"*(other:Vec2)-instance-method","html_id":"*(other:Vec2)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L125","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Circel.new(x * other.x, y * other.y, radious)"}},{"id":"+(other:Vec2)-instance-method","html_id":"+(other:Vec2)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L125","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Circel.new(x + other.x, y + other.y, radious)"}},{"id":"+(other:Real)-instance-method","html_id":"+(other:Real)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"args_string":"(other : Real)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L125","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Circle.new(x + other, y + other, radious)"}},{"id":"-(other:Real)-instance-method","html_id":"-(other:Real)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"args_string":"(other : Real)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L125","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Circle.new(x - other, y - other, radious)"}},{"id":"-(other:Vec2)-instance-method","html_id":"-(other:Vec2)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L125","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Circel.new(x - other.x, y - other.y, radious)"}},{"id":"/(other:Real)-instance-method","html_id":"/(other:Real)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"args_string":"(other : Real)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L125","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Circle.new(x / other, y / other, radious)"}},{"id":"/(other:Vec2)-instance-method","html_id":"/(other:Vec2)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L125","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Circel.new(x / other.x, y / other.y, radious)"}},{"id":"center:Vec2-instance-method","html_id":"center:Vec2-instance-method","name":"center","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Vec2","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L112","def":{"name":"center","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vec2","visibility":"Public","body":"@center"}},{"id":"center=(center:Vec2)-instance-method","html_id":"center=(center:Vec2)-instance-method","name":"center=","doc":null,"summary":null,"abstract":false,"args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vec2"}],"args_string":"(center : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L112","def":{"name":"center=","args":[{"name":"center","doc":null,"default_value":"","external_name":"center","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@center = center"}},{"id":"inspect(io:IO)-instance-method","html_id":"inspect(io:IO)-instance-method","name":"inspect","doc":"Appends this struct's name and instance variables names and values\nto the given IO.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np1.to_s    # \"Point(@x=1, @y=2)\"\np1.inspect # \"Point(@x=1, @y=2)\"\n```","summary":"<p>Appends this struct's name and instance variables names and values to the given IO.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L135","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((((io << '(') << center) << \", \") << radious) << ')'"}},{"id":"radious:Real-instance-method","html_id":"radious:Real-instance-method","name":"radious","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Real","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L112","def":{"name":"radious","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Real","visibility":"Public","body":"@radious"}},{"id":"radious=(radious:Real)-instance-method","html_id":"radious=(radious:Real)-instance-method","name":"radious=","doc":null,"summary":null,"abstract":false,"args":[{"name":"radious","doc":null,"default_value":"","external_name":"radious","restriction":"Real"}],"args_string":"(radious : Real)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L112","def":{"name":"radious=","args":[{"name":"radious","doc":null,"default_value":"","external_name":"radious","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@radious = radious"}},{"id":"x(*args,**options,&)-instance-method","html_id":"x(*args,**options,&amp;)-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L122","def":{"name":"x","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"center.x(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"x(*args,**options)-instance-method","html_id":"x(*args,**options)-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L122","def":{"name":"x","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"center.x(*args, **options)"}},{"id":"y(*args,**options,&)-instance-method","html_id":"y(*args,**options,&amp;)-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L123","def":{"name":"y","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"center.y(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"y(*args,**options)-instance-method","html_id":"y(*args,**options)-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L123","def":{"name":"y","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"center.y(*args, **options)"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Geometric/Polygon","path":"Geometric/Polygon.html","kind":"class","full_name":"Geometric::Polygon","name":"Polygon","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Array","kind":"class","full_name":"Array","name":"Array"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Array","kind":"class","full_name":"Array","name":"Array"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"geometric.cr","line_number":140,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/yuruhi/crystal_lib/Geometric","kind":"module","full_name":"Geometric","name":"Geometric"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(points:Array(Vec2))-class-method","html_id":"new(points:Array(Vec2))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Vec2)"}],"args_string":"(points : Array(Vec2))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L141","def":{"name":"new","args":[{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Vec2)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(points)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(initial_capacity:Int)-class-method","html_id":"new(initial_capacity:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"initial_capacity","doc":null,"default_value":"","external_name":"initial_capacity","restriction":"Int"}],"args_string":"(initial_capacity : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L150","def":{"name":"new","args":[{"name":"initial_capacity","doc":null,"default_value":"","external_name":"initial_capacity","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(initial_capacity)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L146","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int,&)-class-method","html_id":"new(size:Int,&amp;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L154","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"after(i:Int32):Vec2-instance-method","html_id":"after(i:Int32):Vec2-instance-method","name":"after","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"args_string":"(i : Int32) : Vec2","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L161","def":{"name":"after","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vec2","visibility":"Public","body":"self[i != (size - 1) ? i + 1 : 0]"}},{"id":"area:Real-instance-method","html_id":"area:Real-instance-method","name":"area","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Real","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L165","def":{"name":"area","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Real","visibility":"Public","body":"(0...size).sum do |i|\n  self[i].cross(after(i))\nend.abs / 2"}},{"id":"centroid:Vec2-instance-method","html_id":"centroid:Vec2-instance-method","name":"centroid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Vec2","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L171","def":{"name":"centroid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vec2","visibility":"Public","body":"sum / size"}},{"id":"convex_hull:Polygon-instance-method","html_id":"convex_hull:Polygon-instance-method","name":"convex_hull","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Polygon","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L175","def":{"name":"convex_hull","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Polygon","visibility":"Public","body":"result = Polygon.new\npoints = sort\npoints.each do |point|\n  while result.size >= 2 && ((Geometric.ccw(result[-2], result[-1], point)) != -1)\n    result.pop\n  end\n  result << point\nend\nt = result.size + 1\n(0...(points.size - 1)).reverse_each do |i|\n  while result.size >= t && ((Geometric.ccw(result[-2], result[-1], points[i])) != -1)\n    result.pop\n  end\n  result << points[i]\nend\nresult.pop\nresult\n"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L195","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << self"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Geometric/Vec2","path":"Geometric/Vec2.html","kind":"struct","full_name":"Geometric::Vec2","name":"Vec2","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"geometric.cr","line_number":43,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/yuruhi/crystal_lib/Geometric","kind":"module","full_name":"Geometric","name":"Geometric"},"doc":null,"summary":null,"class_methods":[{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L48","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(Real.zero, Real.zero)"}}],"constructors":[{"id":"new(x,y)-class-method","html_id":"new(x,y)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(x, y)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L52","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(other:Vec2)-instance-method","html_id":"*(other:Vec2)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L64","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(x * other.x, y * other.y)"}},{"id":"*(other)-instance-method","html_id":"*(other)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L64","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(x * other, y * other)"}},{"id":"+(other:Vec2)-instance-method","html_id":"+(other:Vec2)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L64","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(x + other.x, y + other.y)"}},{"id":"+(other)-instance-method","html_id":"+(other)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L64","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(x + other, y + other)"}},{"id":"+-instance-method","html_id":"+-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L56","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"-(other:Vec2)-instance-method","html_id":"-(other:Vec2)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L64","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(x - other.x, y - other.y)"}},{"id":"-(other)-instance-method","html_id":"-(other)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L64","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(x - other, y - other)"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L60","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(-x, -y)"}},{"id":"/(other:Vec2)-instance-method","html_id":"/(other:Vec2)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L64","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(x / other.x, y / other.y)"}},{"id":"/(other)-instance-method","html_id":"/(other)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L64","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Vec2.new(x / other, y / other)"}},{"id":"(other:Vec2)-instance-method","html_id":"(other:Vec2)-instance-method","name":"<=>","doc":"The comparison operator. Returns `0` if the two objects are equal,\na negative number if this object is considered less than *other*,\na positive number if this object is considered greter than *other*,\nor `nil` if the two objects are not comparable.\n\nSubclasses define this method to provide class-specific ordering.\n\nThe comparison operator is usually used to sort values:\n\n```\n# Sort in a descending way:\n[3, 1, 2].sort { |x, y| y <=> x } # => [3, 2, 1]\n\n# Sort in an ascending way:\n[3, 1, 2].sort { |x, y| x <=> y } # => [1, 2, 3]\n```","summary":"<p>The comparison operator.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L74","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x_cmp = x <=> other.x\nif x_cmp != 0\n  x_cmp\nelse\n  y <=> other.y\nend\n"}},{"id":"[](index:Int)-instance-method","html_id":"[](index:Int)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L83","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if index == 0\n  return x\nend\nif index == 1\n  return y\nend\nraise(IndexError.new)\n"}},{"id":"angle:Real-instance-method","html_id":"angle:Real-instance-method","name":"angle","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Real","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L97","def":{"name":"angle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Real","visibility":"Public","body":"Real.new(Math.atan2(y, x))"}},{"id":"cross(other:Vec2)-instance-method","html_id":"cross(other:Vec2)-instance-method","name":"cross","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L93","def":{"name":"cross","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(x * other.y) - (y * other.x)"}},{"id":"dot(other:Vec2)-instance-method","html_id":"dot(other:Vec2)-instance-method","name":"dot","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"args_string":"(other : Vec2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L89","def":{"name":"dot","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vec2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(x * other.y) - (y * other.x)"}},{"id":"inspect(io:IO)-instance-method","html_id":"inspect(io:IO)-instance-method","name":"inspect","doc":"Appends this struct's name and instance variables names and values\nto the given IO.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np1.to_s    # \"Point(@x=1, @y=2)\"\np1.inspect # \"Point(@x=1, @y=2)\"\n```","summary":"<p>Appends this struct's name and instance variables names and values to the given IO.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L106","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((((io << '(') << x) << \", \") << y) << ')'"}},{"id":"rotate(rad:Real):Vec2-instance-method","html_id":"rotate(rad:Real):Vec2-instance-method","name":"rotate","doc":null,"summary":null,"abstract":false,"args":[{"name":"rad","doc":null,"default_value":"","external_name":"rad","restriction":"Real"}],"args_string":"(rad : Real) : Vec2","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L101","def":{"name":"rotate","args":[{"name":"rad","doc":null,"default_value":"","external_name":"rad","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vec2","visibility":"Public","body":"c, s = Math.cos(rad), Math.sin(rad)\nVec2.new((x * c) - (y * s), (x * s) + (y * c))\n"}},{"id":"x:Real-instance-method","html_id":"x:Real-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Real","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L46","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Real","visibility":"Public","body":"@x"}},{"id":"x=(x:Real)-instance-method","html_id":"x=(x:Real)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Real"}],"args_string":"(x : Real)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L46","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"y:Real-instance-method","html_id":"y:Real-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Real","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L46","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Real","visibility":"Public","body":"@y"}},{"id":"y=(y:Real)-instance-method","html_id":"y=(y:Real)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Real"}],"args_string":"(y : Real)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/geometric.cr#L46","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Real"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}}],"macros":[],"types":[]}]},{"html_id":"github.com/yuruhi/crystal_lib/Graph","path":"Graph.html","kind":"module","full_name":"Graph(Edge, Edge2)","name":"Graph","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"locations":[{"filename":"graph.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr"},{"filename":"graph/bfs.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs.cr"},{"filename":"graph/bfs01.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs01.cr"},{"filename":"graph/bipartite_graph.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_graph.cr"},{"filename":"graph/components.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/components.cr"},{"filename":"graph/compress.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/compress.cr"},{"filename":"graph/degree.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/degree.cr"},{"filename":"graph/dijkstra.cr","line_number":4,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/dijkstra.cr"},{"filename":"graph/kruskal.cr","line_number":4,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/kruskal.cr"},{"filename":"graph/topological_sort.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/topological_sort.cr"},{"filename":"graph/tree.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/tree.cr"},{"filename":"graph/tree_walk.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/tree_walk.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/yuruhi/crystal_lib/DirectedGraph","kind":"class","full_name":"DirectedGraph(T)","name":"DirectedGraph"},{"html_id":"github.com/yuruhi/crystal_lib/UndirectedGraph","kind":"class","full_name":"UndirectedGraph(T)","name":"UndirectedGraph"},{"html_id":"github.com/yuruhi/crystal_lib/UnweightedDirectedGraph","kind":"class","full_name":"UnweightedDirectedGraph","name":"UnweightedDirectedGraph"},{"html_id":"github.com/yuruhi/crystal_lib/UnweightedUndirectedGraph","kind":"class","full_name":"UnweightedUndirectedGraph","name":"UnweightedUndirectedGraph"}],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size:Int,edges:Enumerable)-class-method","html_id":"new(size:Int,edges:Enumerable)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"args_string":"(size : Int, edges : Enumerable)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L12","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size, edges)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int)-class-method","html_id":"new(size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L8","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(edge:Tuple)-instance-method","html_id":"&lt;&lt;(edge:Tuple)-instance-method","name":"<<","doc":"Add *edge*.","summary":"<p>Add <em>edge</em>.</p>","abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Tuple"}],"args_string":"(edge : Tuple)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L21","def":{"name":"<<","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Tuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self << (Edge2.new(*edge))"}},{"id":"<<(edge:Edge2)-instance-method","html_id":"&lt;&lt;(edge:Edge2)-instance-method","name":"<<","doc":"Add *edge*.","summary":"<p>Add <em>edge</em>.</p>","abstract":true,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Edge2"}],"args_string":"(edge : Edge2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L18","def":{"name":"<<","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Edge2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"[](*args,**options)-instance-method","html_id":"[](*args,**options)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L30","def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph[*args, **options]"}},{"id":"[](*args,**options,&)-instance-method","html_id":"[](*args,**options,&amp;)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L30","def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph[*args, **options] do |*yield_args|\n  yield *yield_args\nend"}},{"id":"add_edges(edges:Enumerable)-instance-method","html_id":"add_edges(edges:Enumerable)-instance-method","name":"add_edges","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"args_string":"(edges : Enumerable)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L25","def":{"name":"add_edges","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"edges.each do |edge|\n  self << edge\nend"}},{"id":"bfs(start:Int):Array(Int32?)-instance-method","html_id":"bfs(start:Int):Array(Int32?)-instance-method","name":"bfs","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"args_string":"(start : Int) : Array(Int32?)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs.cr#L4","def":{"name":"bfs","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32 | ::Nil)","visibility":"Public","body":"if 0 <= start && start < size\nelse\n  raise(ArgumentError.new)\nend\nqueue = Deque {start}\ndist = Array(Int32 | ::Nil).new(size, nil)\ndist[start] = 0\nwhile v = queue.pop?\n  graph[v].each do |edge|\n    if dist[edge.to].nil?\n      dist[edge.to] = dist[v].not_nil! + 1\n      queue.unshift(edge.to)\n    end\n  end\nend\ndist\n"}},{"id":"bfs!(start:Int):Array(Int32)-instance-method","html_id":"bfs!(start:Int):Array(Int32)-instance-method","name":"bfs!","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"args_string":"(start : Int) : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs.cr#L20","def":{"name":"bfs!","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"(bfs(start)).map(&.not_nil!)"}},{"id":"bfs01(start:Int):Array(Int32?)-instance-method","html_id":"bfs01(start:Int):Array(Int32?)-instance-method","name":"bfs01","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"args_string":"(start : Int) : Array(Int32?)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs01.cr#L28","def":{"name":"bfs01","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32 | ::Nil)","visibility":"Public","body":"bfs01(start, &.cost)"}},{"id":"bfs01(start:Int,&):Array(Int32?)-instance-method","html_id":"bfs01(start:Int,&amp;):Array(Int32?)-instance-method","name":"bfs01","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"args_string":"(start : Int, &) : Array(Int32?)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs01.cr#L4","def":{"name":"bfs01","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Array(Int32 | ::Nil)","visibility":"Public","body":"if 0 <= start && start < size\nelse\n  raise(ArgumentError.new)\nend\nqueue = Deque {start}\ndist = Array(Int32 | ::Nil).new(size, nil)\ndist[start] = 0\nwhile v = queue.shift?\n  current_dist = dist[v].not_nil!\n  graph[v].each do |edge|\n    cost = yield edge\n    if (cost == 0) || (cost == 1)\n    else\n      raise(ArgumentError.new(\"Unexpected cost: #{cost}\"))\n    end\n    next_dist = current_dist + cost\n    if (    d = dist[edge.to]).nil? || next_dist < d.not_nil!\n      dist[edge.to] = next_dist\n      if cost == 0\n        queue.unshift(edge.to)\n      else\n        queue.push(edge.to)\n      end\n    end\n  end\nend\ndist\n"}},{"id":"bfs01!(start:Int32,&):Array(Int32)-instance-method","html_id":"bfs01!(start:Int32,&amp;):Array(Int32)-instance-method","name":"bfs01!","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"args_string":"(start : Int32, &) : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs01.cr#L32","def":{"name":"bfs01!","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"(bfs01(start) do |edge|\n  yield edge\nend).map(&.not_nil!)"}},{"id":"bfs01!(start:Int):Array(Int32)-instance-method","html_id":"bfs01!(start:Int):Array(Int32)-instance-method","name":"bfs01!","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"args_string":"(start : Int) : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs01.cr#L36","def":{"name":"bfs01!","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"bfs01!(start, &.cost)"}},{"id":"bfs01_st(start:Int,goal:Int,&):Int32?-instance-method","html_id":"bfs01_st(start:Int,goal:Int,&amp;):Int32?-instance-method","name":"bfs01_st","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"goal","doc":null,"default_value":"","external_name":"goal","restriction":"Int"}],"args_string":"(start : Int, goal : Int, &) : Int32?","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs01.cr#L40","def":{"name":"bfs01_st","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"goal","doc":null,"default_value":"","external_name":"goal","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"if 0 <= start && start < size\nelse\n  raise(ArgumentError.new)\nend\nqueue = Deque {start}\ndist = Array(Int32 | ::Nil).new(size, nil)\ndist[start] = 0\nwhile v = queue.shift?\n  current_dist = dist[v].not_nil!\n  if v == goal\n    return current_dist\n  end\n  graph[v].each do |edge|\n    cost = yield edge\n    if (cost == 0) || (cost == 1)\n    else\n      raise(ArgumentError.new(\"Unexpected cost: #{cost}\"))\n    end\n    next_dist = current_dist + cost\n    if (    d = dist[edge.to]).nil? || next_dist < d.not_nil!\n      dist[edge.to] = next_dist\n      if cost == 0\n        queue.unshift(edge.to)\n      else\n        queue.push(edge.to)\n      end\n    end\n  end\nend\nnil\n"}},{"id":"bfs_st(start:Int,goal:Int):Int32?-instance-method","html_id":"bfs_st(start:Int,goal:Int):Int32?-instance-method","name":"bfs_st","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"goal","doc":null,"default_value":"","external_name":"goal","restriction":"Int"}],"args_string":"(start : Int, goal : Int) : Int32?","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bfs.cr#L24","def":{"name":"bfs_st","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"goal","doc":null,"default_value":"","external_name":"goal","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"if (0 <= start && start < size) && (0 <= goal && goal < size)\nelse\n  raise(ArgumentError.new)\nend\nqueue = Deque {start}\ndist = Array(Int32 | ::Nil).new(size, nil)\ndist[start] = 0\nwhile v = queue.pop?\n  d = dist[v].not_nil!\n  if v == goal\n    return d\n  end\n  graph[v].each do |edge|\n    if dist[edge.to].nil?\n      dist[edge.to] = d + 1\n      queue.unshift(edge.to)\n    end\n  end\nend\nnil\n"}},{"id":"bipartite_graph:Array(Bool)?-instance-method","html_id":"bipartite_graph:Array(Bool)?-instance-method","name":"bipartite_graph","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Bool)?","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/bipartite_graph.cr#L4","def":{"name":"bipartite_graph","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Bool) | ::Nil","visibility":"Public","body":"table = Array(Bool | ::Nil).new(size, nil)\nqueue = Deque.new((0...size).to_a)\nwhile v = queue.shift?\n  if table[v].nil?\n    table[v] = true\n  end\n  flag = table[v].not_nil!\n  graph[v].each do |edge|\n    if (    flag2 = table[edge.to]).nil?\n      table[edge.to] = !flag\n      queue.unshift(edge.to)\n    else\n      if flag == flag2\n        return nil\n      end\n    end\n  end\nend\ntable.map(&.not_nil!)\n"}},{"id":"components-instance-method","html_id":"components-instance-method","name":"components","doc":"Returns `{components size, index, groups}`.","summary":"<p>Returns <code>{components size, index, groups}</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/components.cr#L5","def":{"name":"components","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"undirected = to_undirected\nindex = Array(Int32 | ::Nil).new(size, nil)\ngroups = [] of Set(Int32)\nid = 0\nsize.times do |v|\n  if index[v]\n    next\n  end\n  que = Deque {v}\n  groups << Set(Int32).new\n  while u = que.shift?\n    if index[u]\n      next\n    end\n    index[u] = id\n    groups[id] << u\n    undirected[u].each do |edge|\n      if index[edge.to].nil?\n        que << edge.to\n      end\n    end\n  end\n  id = id + 1\nend\n{id, index.map(&.not_nil!), groups}\n"}},{"id":"compress:self-instance-method","html_id":"compress:self-instance-method","name":"compress","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/compress.cr#L4","def":{"name":"compress","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"values = [] of Int32\neach do |edge|\n  (values << edge.from) << edge.to\nend\nvalues.uniq!.sort!\neach_with_object(self.class.new(values.size)) do |edge, compressed|\n  edge.from = values.bsearch_index do |x|\n    edge.from <= x\n  end.not_nil!\n  edge.to = values.bsearch_index do |x|\n    edge.to <= x\n  end.not_nil!\n  compressed << edge\nend\n"}},{"id":"diameter-instance-method","html_id":"diameter-instance-method","name":"diameter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/tree.cr#L29","def":{"name":"diameter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_, v = (tree_distance(0)).each_with_index.max\ndist, u = (tree_distance(v)).each_with_index.max\n{dist, v, u}\n"}},{"id":"dijkstra(start:Int32)-instance-method","html_id":"dijkstra(start:Int32)-instance-method","name":"dijkstra","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"args_string":"(start : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/dijkstra.cr#L5","def":{"name":"dijkstra","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if 0 <= start && start < size\nelse\n  raise(ArgumentError.new)\nend\nque = AtCoder::PriorityQueue(::Tuple(Int32, typeof(first.cost))).new do |__arg0, __arg1|\n  v1 = __arg0[0]\n  d1 = __arg0[1]\n  v2 = __arg1[0]\n  d2 = __arg1[1]\n  d1 > d2\nend\nque << {start, (typeof(first.cost)).zero}\ndist = Array(typeof(first.cost) | ::Nil).new(size, nil)\ndist[start] = (typeof(first.cost)).zero\nwhile vd = que.pop\n  v, d = vd\n  if dist[v].try do |dist_v|\n    dist_v < d\n  end\n    next\n  end\n  current_dist = dist[v].not_nil!\n  graph[v].each do |edge|\n    next_dist = current_dist + edge.cost\n    if dist[edge.to].nil? || dist[edge.to].not_nil! > next_dist\n      dist[edge.to] = next_dist\n      que << {edge.to, next_dist}\n    end\n  end\nend\ndist\n"}},{"id":"dijkstra!(start:Int32)-instance-method","html_id":"dijkstra!(start:Int32)-instance-method","name":"dijkstra!","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"args_string":"(start : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/dijkstra.cr#L27","def":{"name":"dijkstra!","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(dijkstra(start)).map(&.not_nil!)"}},{"id":"each(&):Nil-instance-method","html_id":"each(&amp;):Nil-instance-method","name":"each","doc":"Must yield this collection's elements to the block.","summary":"<p>Must yield this collection's elements to the block.</p>","abstract":false,"args":[],"args_string":"(&) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L32","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(0...size).each do |v|\n  self[v].each do |edge|\n    yield Edge2.new(v, edge)\n  end\nend"}},{"id":"graph:Array(Array(Edge))-instance-method","html_id":"graph:Array(Array(Edge))-instance-method","name":"graph","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Array(Edge))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L6","def":{"name":"graph","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Array(Edge))","visibility":"Public","body":"@graph"}},{"id":"indegree:Array(Int32)-instance-method","html_id":"indegree:Array(Int32)-instance-method","name":"indegree","doc":"Returns table of indegree.","summary":"<p>Returns table of indegree.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/degree.cr#L5","def":{"name":"indegree","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"each_with_object(Array.new(size, 0)) do |edge, cnt|\n  __temp_88 = edge.to\n  cnt[__temp_88] = cnt[__temp_88] + 1\nend"}},{"id":"kruskal-instance-method","html_id":"kruskal-instance-method","name":"kruskal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/kruskal.cr#L5","def":{"name":"kruskal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"uf = UnionFind.new(size)\nresult = to_a.sort.sum do |edge|\n  uf.unite(edge.from, edge.to) ? edge.cost : (typeof(first.cost)).zero\nend\n(uf.size(0)) == size ? result : nil\n"}},{"id":"outdegree:Array(Int32)-instance-method","html_id":"outdegree:Array(Int32)-instance-method","name":"outdegree","doc":"Returns table of outdegree.","summary":"<p>Returns table of outdegree.</p>","abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/degree.cr#L12","def":{"name":"outdegree","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"each_with_object(Array.new(size, 0)) do |edge, cnt|\n  __temp_90 = edge.from\n  cnt[__temp_90] = cnt[__temp_90] + 1\nend"}},{"id":"post_order(root:Int):Array(Int32)-instance-method","html_id":"post_order(root:Int):Array(Int32)-instance-method","name":"post_order","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"args_string":"(root : Int) : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/tree_walk.cr#L17","def":{"name":"post_order","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"result = Array(Int32).new(size)\nvisited = Array(Bool).new(size, false)\nstack = Deque {{root, -1}}\nwhile vp = stack.last?\n  vertex, parent = vp\n  if visited[vertex]\n    stack.pop\n    result << vertex\n  else\n    self[vertex].reverse_each do |edge|\n      if edge.to != parent\n        stack << {edge.to, vertex}\n      end\n    end\n    visited[vertex] = true\n  end\nend\nresult\n"}},{"id":"pre_order(root:Int):Array(Int32)-instance-method","html_id":"pre_order(root:Int):Array(Int32)-instance-method","name":"pre_order","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"args_string":"(root : Int) : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/tree_walk.cr#L4","def":{"name":"pre_order","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"result = Array(Int32).new(size)\nstack = Deque {{root, -1}}\nwhile vp = stack.pop?\n  vertex, parent = vp\n  result << vertex\n  self[vertex].reverse_each do |edge|\n    if edge.to != parent\n      stack << {edge.to, vertex}\n    end\n  end\nend\nresult\n"}},{"id":"reverse-instance-method","html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L40","def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if self.class.directed?\n  each_with_object(self.class.new(size)) do |edge, reversed|\n    reversed << edge.reverse\n  end\nelse\n  dup\nend"}},{"id":"size(*args,**options,&)-instance-method","html_id":"size(*args,**options,&amp;)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L29","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L29","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options)"}},{"id":"subtree_size(root:Int):Array(Int32)-instance-method","html_id":"subtree_size(root:Int):Array(Int32)-instance-method","name":"subtree_size","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"args_string":"(root : Int) : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/tree.cr#L10","def":{"name":"subtree_size","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"result = Array.new(size, 0)\nsubtree_size_dfs(root, -1, result)\nresult\n"}},{"id":"to_undirected-instance-method","html_id":"to_undirected-instance-method","name":"to_undirected","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L50","def":{"name":"to_undirected","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if self.class.directed?\n  each_with_object(self.class.new(size)) do |edge, graph|\n    graph << edge\n    if self.class.directed?\n      graph << edge.reverse\n    end\n  end\nelse\n  dup\nend"}},{"id":"topological_sort:Array(Int32)-instance-method","html_id":"topological_sort:Array(Int32)-instance-method","name":"topological_sort","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/topological_sort.cr#L14","def":{"name":"topological_sort","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"result = [] of Int32\nvisited = [false] * size\nsize.times do |v|\n  topological_sort_dfs(result, visited, v)\nend\nresult.reverse\n"}},{"id":"tree_distance(root:Int)-instance-method","html_id":"tree_distance(root:Int)-instance-method","name":"tree_distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"args_string":"(root : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/tree.cr#L23","def":{"name":"tree_distance","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a = Array.new(size, (typeof(first.cost)).zero)\ntree_distance_dfs(root, -1, 0, a)\na\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Imos","path":"Imos.html","kind":"class","full_name":"Imos(T)","name":"Imos","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/imos.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos.cr#L5","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Imos(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(start:Int,count:Int,val:T):Nil-instance-method","html_id":"add(start:Int,count:Int,val:T):Nil-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"args_string":"(start : Int, count : Int, val : T) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos.cr#L9","def":{"name":"add","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if @builded\n  raise(\"self had been called `#build`\")\nend\nif count < 0\n  raise(ArgumentError.new(\"Negative count: #{count}\"))\nend\nif start < 0\n  start = start + size\nend\nif 0 <= start && start <= size\n  count = Math.min(count, size - start)\n  __temp_46 = start\n  @a[__temp_46] = @a[__temp_46] + val\n  __temp_48 = start + count\n  @a[__temp_48] = @a[__temp_48] - val\nend\n"}},{"id":"add(range:Range,val:T):Nil-instance-method","html_id":"add(range:Range,val:T):Nil-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"args_string":"(range : Range, val : T) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos.cr#L20","def":{"name":"add","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"start, count = (Indexable.range_to_index_and_count(range, size)) || (raise(IndexError.new))\nadd(start, count, val)\n"}},{"id":"build:Array(T)-instance-method","html_id":"build:Array(T)-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos.cr#L25","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"if @builded\n  raise(\"self had been called `#build`\")\nend\n@builded = true\n(0...size).map do |i|\n  @a[i].tap do |x|\n    __temp_50 = i + 1\n    @a[__temp_50] = @a[__temp_50] + x\n  end\nend\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos.cr#L2","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Imos2D","path":"Imos2D.html","kind":"class","full_name":"Imos2D(T)","name":"Imos2D","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/imos_2d.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_2d.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(height,width,init_val:T=T.zero)-class-method","html_id":"new(height,width,init_val:T=T.zero)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""},{"name":"init_val","doc":null,"default_value":"T.zero","external_name":"init_val","restriction":"T"}],"args_string":"(height, width, init_val : T = <span class=\"t\">T</span>.zero)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_2d.cr#L5","def":{"name":"new","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""},{"name":"init_val","doc":null,"default_value":"T.zero","external_name":"init_val","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Imos2D(T).allocate\n_.initialize(height, width, init_val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](y:Int32,x:Int32):T-instance-method","html_id":"[](y:Int32,x:Int32):T-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(y : Int32, x : Int32) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_2d.cr#L43","def":{"name":"[]","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"if @builded\nelse\n  raise(\"self had not been called `#build`\")\nend\n@table[y][x]\n"}},{"id":"add(ys:Int,yc:Int,xs:Int,xc:Int,val:T):Nil-instance-method","html_id":"add(ys:Int,yc:Int,xs:Int,xc:Int,val:T):Nil-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"ys","doc":null,"default_value":"","external_name":"ys","restriction":"Int"},{"name":"yc","doc":null,"default_value":"","external_name":"yc","restriction":"Int"},{"name":"xs","doc":null,"default_value":"","external_name":"xs","restriction":"Int"},{"name":"xc","doc":null,"default_value":"","external_name":"xc","restriction":"Int"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"args_string":"(ys : Int, yc : Int, xs : Int, xc : Int, val : T) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_2d.cr#L11","def":{"name":"add","args":[{"name":"ys","doc":null,"default_value":"","external_name":"ys","restriction":"Int"},{"name":"yc","doc":null,"default_value":"","external_name":"yc","restriction":"Int"},{"name":"xs","doc":null,"default_value":"","external_name":"xs","restriction":"Int"},{"name":"xc","doc":null,"default_value":"","external_name":"xc","restriction":"Int"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if @builded\n  raise(\"self had been called `build`\")\nend\nif yc < 0\n  raise(ArgumentError.new(\"Negative count: #{yc}\"))\nend\nif xc < 0\n  raise(ArgumentError.new(\"Negative count: #{xc}\"))\nend\n__temp_52 = xs + xc\n__temp_53 = @table[ys + yc]\n__temp_53[__temp_52] = __temp_53[__temp_52] + val\n__temp_54 = xs\n__temp_55 = @table[ys + yc]\n__temp_55[__temp_54] = __temp_55[__temp_54] - val\n__temp_56 = xs + xc\n__temp_57 = @table[ys]\n__temp_57[__temp_56] = __temp_57[__temp_56] - val\n__temp_58 = xs\n__temp_59 = @table[ys]\n__temp_59[__temp_58] = __temp_59[__temp_58] + val\n"}},{"id":"add(y:Range,x:Range,val:T):Nil-instance-method","html_id":"add(y:Range,x:Range,val:T):Nil-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Range"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Range"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"args_string":"(y : Range, x : Range, val : T) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_2d.cr#L21","def":{"name":"add","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Range"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Range"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"ys, yc = (Indexable.range_to_index_and_count(y, height)) || (raise(IndexError.new))\nxs, xc = (Indexable.range_to_index_and_count(x, width)) || (raise(IndexError.new))\nadd(ys, yc, xs, xc, val)\n"}},{"id":"build:Array(Array(T))-instance-method","html_id":"build:Array(Array(T))-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Array(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_2d.cr#L27","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Array(T))","visibility":"Public","body":"if @builded\n  raise(\"self had been called `#build`\")\nend\n@builded = true\n(0..height).each do |y|\n  (1..width).each do |x|\n    __temp_60 = x\n    __temp_61 = @table[y]\n    __temp_61[__temp_60] = __temp_61[__temp_60] + @table[y][x - 1]\n  end\nend\n(1..height).each do |y|\n  (0..width).each do |x|\n    __temp_62 = x\n    __temp_63 = @table[y]\n    __temp_63[__temp_62] = __temp_63[__temp_62] + @table[y - 1][x]\n  end\nend\n(0...height).map do |i|\n  @table[i][0...width]\nend\n"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_2d.cr#L2","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@height"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_2d.cr#L2","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@width"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/ImosLinear","path":"ImosLinear.html","kind":"class","full_name":"ImosLinear(T)","name":"ImosLinear","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/imos_linear.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_linear.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_linear.cr#L5","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ImosLinear(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(start:Int,count:Int,val_a:T,val_b:T):Nil-instance-method","html_id":"add(start:Int,count:Int,val_a:T,val_b:T):Nil-instance-method","name":"add","doc":"Add `a + (i - l) * b` to `[l, r)`.","summary":"<p>Add <code>a + (i - l) * b</code> to <code>[l, r)</code>.</p>","abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"},{"name":"val_a","doc":null,"default_value":"","external_name":"val_a","restriction":"T"},{"name":"val_b","doc":null,"default_value":"","external_name":"val_b","restriction":"T"}],"args_string":"(start : Int, count : Int, val_a : T, val_b : T) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_linear.cr#L11","def":{"name":"add","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"},{"name":"val_a","doc":null,"default_value":"","external_name":"val_a","restriction":"T"},{"name":"val_b","doc":null,"default_value":"","external_name":"val_b","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if @builded\n  raise(\"self had been called `#build`\")\nend\nif count < 0\n  raise(ArgumentError.new(\"Negative count: #{count}\"))\nend\n__temp_64 = start\n@a[__temp_64] = @a[__temp_64] + (val_a - (val_b * start))\n__temp_66 = start\n@b[__temp_66] = @b[__temp_66] + val_b\n__temp_68 = start + count\n@a[__temp_68] = @a[__temp_68] - (val_a - (val_b * start))\n__temp_70 = start + count\n@b[__temp_70] = @b[__temp_70] - val_b\n"}},{"id":"add(range:Range,val_a:T,val_b:T):Nil-instance-method","html_id":"add(range:Range,val_a:T,val_b:T):Nil-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"},{"name":"val_a","doc":null,"default_value":"","external_name":"val_a","restriction":"T"},{"name":"val_b","doc":null,"default_value":"","external_name":"val_b","restriction":"T"}],"args_string":"(range : Range, val_a : T, val_b : T) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_linear.cr#L20","def":{"name":"add","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"},{"name":"val_a","doc":null,"default_value":"","external_name":"val_a","restriction":"T"},{"name":"val_b","doc":null,"default_value":"","external_name":"val_b","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"start, count = (Indexable.range_to_index_and_count(range, size)) || (raise(IndexError.new))\nadd(start, count, val_a, val_b)\n"}},{"id":"build:Array(T)-instance-method","html_id":"build:Array(T)-instance-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_linear.cr#L25","def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"if @builded\n  raise(\"self had been called `#build`\")\nend\n@builded = true\n(0...size).map do |i|\n  __temp_72 = i + 1\n  @a[__temp_72] = @a[__temp_72] + @a[i]\n  __temp_74 = i + 1\n  @b[__temp_74] = @b[__temp_74] + @b[i]\n  @a[i] + (@b[i] * i)\nend\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/imos_linear.cr#L2","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Indexable","path":"Indexable.html","kind":"module","full_name":"Indexable(T)","name":"Indexable","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"locations":[{"filename":"point.cr","line_number":198,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/yuruhi/crystal_lib/Array","kind":"class","full_name":"Array(T)","name":"Array"},{"html_id":"github.com/yuruhi/crystal_lib/Matrix","kind":"class","full_name":"Matrix(T)","name":"Matrix"}],"namespace":null,"doc":"A container that allows accessing elements via a numeric index.\n\nIndexing starts at `0`. A negative index is assumed to be\nrelative to the end of the container: `-1` indicates the last element,\n`-2` is the next to last element, and so on.\n\nTypes including this module are typically `Array`-like types.","summary":"<p>A container that allows accessing elements via a numeric index.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"[](point:Point)-instance-method","html_id":"[](point:Point)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"args_string":"(point : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L218","def":{"name":"[]","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch(point) do\n  raise(IndexError.new)\nend"}},{"id":"[]?(point:Point)-instance-method","html_id":"[]?(point:Point)-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"args_string":"(point : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L222","def":{"name":"[]?","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"fetch(point, nil)"}},{"id":"fetch(point:Point,&)-instance-method","html_id":"fetch(point:Point,&amp;)-instance-method","name":"fetch","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"args_string":"(point : Point, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L211","def":{"name":"fetch","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"point = check_index_out_of_bounds(point) do\n  return yield point\nend\n(unsafe_fetch(point.y))[point.x]\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Int","path":"Int.html","kind":"struct","full_name":"Int","name":"Int","abstract":true,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Number","kind":"struct","full_name":"Number","name":"Number"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"int/each_subset.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/int/each_subset.cr"},{"filename":"atcoder/src/Prime.cr","line_number":288,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/atcoder/src/Prime.cr"},{"filename":"math/mint.cr","line_number":180,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr"},{"filename":"math/mint.cr","line_number":181,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr"},{"filename":"math/powmod.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/powmod.cr"},{"filename":"math/prime_factor.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/prime_factor.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Int is the base type of all integer types.\n\nThere are four signed integer types: `Int8`, `Int16`, `Int32` and `Int64`,\nbeing able to represent numbers of 8, 16, 32 and 64 bits respectively.\nThere are four unsigned integer types: `UInt8`, `UInt16`, `UInt32` and `UInt64`.\n\nAn integer literal is an optional `+` or `-` sign, followed by\na sequence of digits and underscores, optionally followed by a suffix.\nIf no suffix is present, the literal's type is the lowest between `Int32`, `Int64` and `UInt64`\nin which the number fits:\n\n```\n1 # Int32\n\n1_i8  # Int8\n1_i16 # Int16\n1_i32 # Int32\n1_i64 # Int64\n\n1_u8  # UInt8\n1_u16 # UInt16\n1_u32 # UInt32\n1_u64 # UInt64\n\n+10 # Int32\n-20 # Int32\n\n2147483648          # Int64\n9223372036854775808 # UInt64\n```\n\nThe underscore `_` before the suffix is optional.\n\nUnderscores can be used to make some numbers more readable:\n\n```\n1_000_000 # better than 1000000\n```\n\nBinary numbers start with `0b`:\n\n```\n0b1101 # == 13\n```\n\nOctal numbers start with `0o`:\n\n```\n0o123 # == 83\n```\n\nHexadecimal numbers start with `0x`:\n\n```\n0xFE012D # == 16646445\n0xfe012d # == 16646445\n```","summary":"<p>Int is the base type of all integer types.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"*(value:Mint)-instance-method","html_id":"*(value:Mint)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"args_string":"(value : Mint)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m * value"}},{"id":"*(value:Mint2)-instance-method","html_id":"*(value:Mint2)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"args_string":"(value : Mint2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"*","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m2 * value"}},{"id":"+(value:Mint)-instance-method","html_id":"+(value:Mint)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"args_string":"(value : Mint)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m + value"}},{"id":"+(value:Mint2)-instance-method","html_id":"+(value:Mint2)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"args_string":"(value : Mint2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"+","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m2 + value"}},{"id":"-(value:Mint)-instance-method","html_id":"-(value:Mint)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"args_string":"(value : Mint)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m - value"}},{"id":"-(value:Mint2)-instance-method","html_id":"-(value:Mint2)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"args_string":"(value : Mint2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"-","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m2 - value"}},{"id":"/(value:Mint)-instance-method","html_id":"/(value:Mint)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"args_string":"(value : Mint)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m / value"}},{"id":"/(value:Mint2)-instance-method","html_id":"/(value:Mint2)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"args_string":"(value : Mint2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"/","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m2 / value"}},{"id":"//(value:Mint)-instance-method","html_id":"//(value:Mint)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"args_string":"(value : Mint)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m // value"}},{"id":"//(value:Mint2)-instance-method","html_id":"//(value:Mint2)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"args_string":"(value : Mint2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"//","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Mint2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_m2 // value"}},{"id":"<(m:Mint2)-instance-method","html_id":"&lt;(m:Mint2)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint2"}],"args_string":"(m : Mint2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"<","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<(m:Mint)-instance-method","html_id":"&lt;(m:Mint)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint"}],"args_string":"(m : Mint)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"<","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<=(m:Mint)-instance-method","html_id":"&lt;=(m:Mint)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint"}],"args_string":"(m : Mint)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"<=","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":"<=(m:Mint2)-instance-method","html_id":"&lt;=(m:Mint2)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint2"}],"args_string":"(m : Mint2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"<=","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":">(m:Mint)-instance-method","html_id":"&gt;(m:Mint)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint"}],"args_string":"(m : Mint)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":">","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">(m:Mint2)-instance-method","html_id":"&gt;(m:Mint2)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint2"}],"args_string":"(m : Mint2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":">","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">=(m:Mint)-instance-method","html_id":"&gt;=(m:Mint)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint"}],"args_string":"(m : Mint)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":">=","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":">=(m:Mint2)-instance-method","html_id":"&gt;=(m:Mint2)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint2"}],"args_string":"(m : Mint2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":">=","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Mint2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":"divisors:Array(self)-instance-method","html_id":"divisors:Array(self)-instance-method","name":"divisors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(<span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/prime_factor.cr#L17","def":{"name":"divisors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(self)","visibility":"Public","body":"result = [] of self\neach_divisor do |d|\n  result << d\nend\nresult\n"}},{"id":"each_divisor(&)-instance-method","html_id":"each_divisor(&amp;)-instance-method","name":"each_divisor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/prime_factor.cr#L25","def":{"name":"each_divisor","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"tmp = [] of self\n((typeof(self)).new(1)).upto(self) do |x|\n  if (x * x) > self\n    break\n  end\n  if (self % x) == 0\n    yield x\n    tmp << x\n  end\nend\n(0...tmp.size).reverse_each do |i|\n  if (tmp[i] * tmp[i]) < self\n    yield self // tmp[i]\n  end\nend\n"}},{"id":"each_subset(&)-instance-method","html_id":"each_subset(&amp;)-instance-method","name":"each_subset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/int/each_subset.cr#L24","def":{"name":"each_subset","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield self\nsub = (~(-self)) & self\nloop do\n  yield sub\n  if sub == 0\n    break\n  end\n  sub = (~(-sub)) & self\nend\n"}},{"id":"each_subset-instance-method","html_id":"each_subset-instance-method","name":"each_subset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/int/each_subset.cr#L20","def":{"name":"each_subset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"SubsetIterator.new(self)"}},{"id":"powmod(exp:T,mod:self)forallT-instance-method","html_id":"powmod(exp:T,mod:self)forallT-instance-method","name":"powmod","doc":"Caluclates `self * exp % mod`.","summary":"<p>Caluclates <code>self * exp % mod</code>.</p>","abstract":false,"args":[{"name":"exp","doc":null,"default_value":"","external_name":"exp","restriction":"T"},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":"self"}],"args_string":"(exp : T, mod : <span class=\"k\">self</span>) forall T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/powmod.cr#L3","def":{"name":"powmod","args":[{"name":"exp","doc":null,"default_value":"","external_name":"exp","restriction":"T"},{"name":"mod","doc":null,"default_value":"","external_name":"mod","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = self % mod\nres = (typeof(self)).new(1)\nwhile exp > 0\n  if exp.odd?\n    res = (res * n) % mod\n  end\n  n = (n * n) % mod\n  exp = exp >> 1\nend\nres\n"}},{"id":"prime_factor:Array(Tuple(self,Int32))-instance-method","html_id":"prime_factor:Array(Tuple(self,Int32))-instance-method","name":"prime_factor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Tuple(<span class=\"k\">self</span>, Int32))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/prime_factor.cr#L2","def":{"name":"prime_factor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Tuple(self, Int32))","visibility":"Public","body":"result = [] of Tuple(self, Int32)\nn = self\n((typeof(self)).new(2)).upto((Math.sqrt(self)).ceil) do |x|\n  count = 0\n  while (n % x) == 0\n    n = n // x\n    count = count + 1\n  end\n  if count > 0\n    result << {x, count}\n  end\nend\nif n != 1\n  result << {n, 1}\nend\nresult\n"}},{"id":"to_m:Mint-instance-method","html_id":"to_m:Mint-instance-method","name":"to_m","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Mint","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"to_m","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mint","visibility":"Public","body":"Mint.new(self)"}},{"id":"to_m2:Mint2-instance-method","html_id":"to_m2:Mint2-instance-method","name":"to_m2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Mint2","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"to_m2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mint2","visibility":"Public","body":"Mint2.new(self)"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/LCA","path":"LCA.html","kind":"class","full_name":"LCA(Edge, Edge2)","name":"LCA","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph/lca.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/lca.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(graph:Graph(Edge,Edge2),root:Int)-class-method","html_id":"new(graph:Graph(Edge,Edge2),root:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"Graph(Edge, Edge2)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"args_string":"(graph : Graph(Edge, Edge2), root : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/lca.cr#L15","def":{"name":"new","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"Graph(Edge, Edge2)"},{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LCA(Edge, Edge2).allocate\n_.initialize(graph, root)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"depth:Array(Int32)-instance-method","html_id":"depth:Array(Int32)-instance-method","name":"depth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/lca.cr#L5","def":{"name":"depth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@depth"}},{"id":"dist(u:Int,v:Int):Int32-instance-method","html_id":"dist(u:Int,v:Int):Int32-instance-method","name":"dist","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"Int"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int"}],"args_string":"(u : Int, v : Int) : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/lca.cr#L49","def":{"name":"dist","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"Int"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"(@depth[u] + @depth[v]) - (@depth[lca(u, v)] * 2)"}},{"id":"graph:Graph(Edge,Edge2)-instance-method","html_id":"graph:Graph(Edge,Edge2)-instance-method","name":"graph","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Graph(Edge, Edge2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/lca.cr#L4","def":{"name":"graph","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Graph(Edge, Edge2)","visibility":"Public","body":"@graph"}},{"id":"lca(u:Int,v:Int):Int32-instance-method","html_id":"lca(u:Int,v:Int):Int32-instance-method","name":"lca","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"Int"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int"}],"args_string":"(u : Int, v : Int) : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/lca.cr#L33","def":{"name":"lca","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"Int"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if 0 <= u && u < size\nelse\n  raise(IndexError.new)\nend\nif 0 <= v && v < size\nelse\n  raise(IndexError.new)\nend\nif @depth[u] > @depth[v]\n  u, v = v, u\nend\n(0...@log2).each do |k|\n  if ((@depth[v] - @depth[u]).bit(k)) == 1\n    v = @parent[k][v]\n  end\nend\nif u == v\n  return u\nend\n(0...@log2).reverse_each do |k|\n  if @parent[k][u] != @parent[k][v]\n    u, v = @parent[k][u], @parent[k][v]\n  end\nend\n@parent[0][u]\n"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/lca.cr#L31","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options)"}},{"id":"size(*args,**options,&)-instance-method","html_id":"size(*args,**options,&amp;)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/lca.cr#L31","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Matrix","path":"Matrix.html","kind":"class","full_name":"Matrix(T)","name":"Matrix","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"math/matrix.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"identity(size:Int32)-class-method","html_id":"identity(size:Int32)-class-method","name":"identity","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L7","def":{"name":"identity","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = Matrix(T).new(size, size)\n(0...size).each do |i|\n  result[i][i] = T.new(1)\nend\nresult\n"}}],"constructors":[{"id":"new(height,width,init_value:T=T.zero)-class-method","html_id":"new(height,width,init_value:T=T.zero)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""},{"name":"init_value","doc":null,"default_value":"T.zero","external_name":"init_value","restriction":"T"}],"args_string":"(height, width, init_value : T = <span class=\"t\">T</span>.zero)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L15","def":{"name":"new","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""},{"name":"init_value","doc":null,"default_value":"T.zero","external_name":"init_value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Matrix(T).allocate\n_.initialize(height, width, init_value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(init_matrix:Array(Array(T)))-class-method","html_id":"new(init_matrix:Array(Array(T)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"init_matrix","doc":null,"default_value":"","external_name":"init_matrix","restriction":"Array(Array(T))"}],"args_string":"(init_matrix : Array(Array(T)))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L19","def":{"name":"new","args":[{"name":"init_matrix","doc":null,"default_value":"","external_name":"init_matrix","restriction":"Array(Array(T))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Matrix(T).allocate\n_.initialize(init_matrix)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(other:self)-instance-method","html_id":"*(other:self)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L51","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if width == other.height\nelse\n  IndexError.new\nend\nresult = Matrix(T).new(height, other.width)\n(0...height).each do |i|\n  (0...other.width).each do |j|\n    (0...width).each do |k|\n      __temp_96 = j\n      __temp_97 = result[i]\n      __temp_97[__temp_96] = __temp_97[__temp_96] + (data[i][k] * other[k][j])\n    end\n  end\nend\nresult\n"}},{"id":"**(k:Int)-instance-method","html_id":"**(k:Int)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":"Int"}],"args_string":"(k : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L64","def":{"name":"**","args":[{"name":"k","doc":null,"default_value":"","external_name":"k","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = Matrix(T).identity(height)\nmemo = Matrix.new(data)\nwhile k > 0\n  if k.odd?\n    result = result * memo\n  end\n  memo = memo * memo\n  k = k >> 1\nend\nresult\n"}},{"id":"+(other:self)-instance-method","html_id":"+(other:self)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L29","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (height == other.height) && (width == other.width)\nelse\n  IndexError.new\nend\nresult = Matrix(T).new(height, width)\n(0...height).each do |i|\n  (0...width).each do |j|\n    result[i][j] = data[i][j] + other[i][j]\n  end\nend\nresult\n"}},{"id":"-(other:self)-instance-method","html_id":"-(other:self)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L40","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (height == other.height) && (width == other.width)\nelse\n  IndexError.new\nend\nresult = Matrix(T).new(height, width)\n(0...height).each do |i|\n  (0...width).each do |j|\n    result[i][j] = data[i][j] - other[i][j]\n  end\nend\nresult\n"}},{"id":"data:Array(Array(T))-instance-method","html_id":"data:Array(Array(T))-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Array(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L5","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Array(T))","visibility":"Public","body":"@data"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L4","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@height"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L26","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.size(*args, **options)"}},{"id":"size(*args,**options,&)-instance-method","html_id":"size(*args,**options,&amp;)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L26","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_s(io)-instance-method","html_id":"to_s(io)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L75","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << data"}},{"id":"unsafe_fetch(*args,**options)-instance-method","html_id":"unsafe_fetch(*args,**options)-instance-method","name":"unsafe_fetch","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L27","def":{"name":"unsafe_fetch","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.unsafe_fetch(*args, **options)"}},{"id":"unsafe_fetch(*args,**options,&)-instance-method","html_id":"unsafe_fetch(*args,**options,&amp;)-instance-method","name":"unsafe_fetch","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L27","def":{"name":"unsafe_fetch","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@data.unsafe_fetch(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/matrix.cr#L4","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@width"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Mint","path":"Mint.html","kind":"struct","full_name":"Mint","name":"Mint","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"math/mint.cr","line_number":180,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MOD","name":"MOD","value":"1000000007_i64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"raw(value:Int64)-class-method","html_id":"raw(value:Int64)-class-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"raw","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = new\nresult.value = value\nresult\n"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new"}}],"constructors":[{"id":"new(m:self)-class-method","html_id":"new(m:self)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"new","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(m)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(v)-instance-method","html_id":"*(v)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"*","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * (self.class.new(v))"}},{"id":"*(m:self)-instance-method","html_id":"*(m:self)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"*","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(value &* m.value)"}},{"id":"**(exponent:Int)-instance-method","html_id":"**(exponent:Int)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"exponent","doc":null,"default_value":"","external_name":"exponent","restriction":"Int"}],"args_string":"(exponent : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"**","args":[{"name":"exponent","doc":null,"default_value":"","external_name":"exponent","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t, res = self, self.class.raw(1_i64)\nwhile exponent > 0\n  if (exponent & 1) == 1\n    res = res * t\n  end\n  t = t * t\n  exponent = exponent >> 1\nend\nres\n"}},{"id":"+(m:self)-instance-method","html_id":"+(m:self)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"+","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = value &+ m.value\nif x >= MOD\n  x = x &- MOD\nend\nself.class.raw(x)\n"}},{"id":"+(v)-instance-method","html_id":"+(v)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"+","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self + (self.class.new(v))"}},{"id":"+:self-instance-method","html_id":"+:self-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self"}},{"id":"-(m:self)-instance-method","html_id":"-(m:self)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"-","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = value &- m.value\nif x < 0\n  x = x &+ MOD\nend\nself.class.raw(x)\n"}},{"id":"-(v)-instance-method","html_id":"-(v)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"-","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self - (self.class.new(v))"}},{"id":"-:self-instance-method","html_id":"-:self-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.class.raw(value != 0 ? MOD &- value : 0_i64)"}},{"id":"/(v)-instance-method","html_id":"/(v)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"/","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / (self.class.new(v))"}},{"id":"/(m:self)-instance-method","html_id":"/(m:self)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"/","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if m.value == 0\n  raise(DivisionByZeroError.new)\nend\na, b, u, v = m.value, MOD, 1_i64, 0_i64\nwhile b != 0\n  t = a // b\n  a = a &- (t &* b)\n  a, b = b, a\n  u = u &- (t &* v)\n  u, v = v, u\nend\nself.class.new(value &* u)\n"}},{"id":"//(v)-instance-method","html_id":"//(v)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"//","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / v"}},{"id":"<(other)-instance-method","html_id":"&lt;(other)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<=(other)-instance-method","html_id":"&lt;=(other)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":"==(m:self)-instance-method","html_id":"==(m:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"==","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == m.value"}},{"id":"==(m)-instance-method","html_id":"==(m)-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"args_string":"(m)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"==","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == m"}},{"id":">(other)-instance-method","html_id":"&gt;(other)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">=(other)-instance-method","html_id":"&gt;=(other)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":"abs-instance-method","html_id":"abs-instance-method","name":"abs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"abs2-instance-method","html_id":"abs2-instance-method","name":"abs2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"abs2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * self"}},{"id":"inspect(*args,**options)-instance-method","html_id":"inspect(*args,**options)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options)"}},{"id":"inspect(*args,**options,&)-instance-method","html_id":"inspect(*args,**options,&amp;)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"inv-instance-method","html_id":"inv-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.class.raw(1)) // self"}},{"id":"pred-instance-method","html_id":"pred-instance-method","name":"pred","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"pred","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.raw(value != 0 ? value &- 1 : MOD &- 1)"}},{"id":"succ-instance-method","html_id":"succ-instance-method","name":"succ","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"succ","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.raw(value != (MOD &- 1) ? value &+ 1 : 0_i64)"}},{"id":"to_i64:Int64-instance-method","html_id":"to_i64:Int64-instance-method","name":"to_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"value"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&)-instance-method","html_id":"to_s(*args,**options,&amp;)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"value:Int64-instance-method","html_id":"value:Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@value"}}],"macros":[{"id":"[](*nums)-macro","html_id":"[](*nums)-macro","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"nums","doc":null,"default_value":"","external_name":"nums","restriction":""}],"args_string":"(*nums)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"[]","args":[{"name":"nums","doc":null,"default_value":"","external_name":"nums","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"      \n        Array(\n{{ @type }}\n).build(\n{{ nums.size }}\n) do |\n%buffer\n|\n          \n{% for num, i in nums %}\n            %buffer[{{ i }}] = {{ @type }}.new({{ num }})\n          {% end %}\n\n          \n{{ nums.size }}\n\n        \nend\n      \n    \n"}}],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Mint2","path":"Mint2.html","kind":"struct","full_name":"Mint2","name":"Mint2","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"math/mint.cr","line_number":181,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MOD","name":"MOD","value":"998244353_i64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"raw(value:Int64)-class-method","html_id":"raw(value:Int64)-class-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"raw","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = new\nresult.value = value\nresult\n"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new"}}],"constructors":[{"id":"new(m:self)-class-method","html_id":"new(m:self)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"new","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(m)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(value)-class-method","html_id":"new(value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(v)-instance-method","html_id":"*(v)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"*","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * (self.class.new(v))"}},{"id":"*(m:self)-instance-method","html_id":"*(m:self)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"*","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(value &* m.value)"}},{"id":"**(exponent:Int)-instance-method","html_id":"**(exponent:Int)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"exponent","doc":null,"default_value":"","external_name":"exponent","restriction":"Int"}],"args_string":"(exponent : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"**","args":[{"name":"exponent","doc":null,"default_value":"","external_name":"exponent","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t, res = self, self.class.raw(1_i64)\nwhile exponent > 0\n  if (exponent & 1) == 1\n    res = res * t\n  end\n  t = t * t\n  exponent = exponent >> 1\nend\nres\n"}},{"id":"+(m:self)-instance-method","html_id":"+(m:self)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"+","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = value &+ m.value\nif x >= MOD\n  x = x &- MOD\nend\nself.class.raw(x)\n"}},{"id":"+(v)-instance-method","html_id":"+(v)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"+","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self + (self.class.new(v))"}},{"id":"+:self-instance-method","html_id":"+:self-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"+","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self"}},{"id":"-(m:self)-instance-method","html_id":"-(m:self)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"-","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = value &- m.value\nif x < 0\n  x = x &+ MOD\nend\nself.class.raw(x)\n"}},{"id":"-(v)-instance-method","html_id":"-(v)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"-","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self - (self.class.new(v))"}},{"id":"-:self-instance-method","html_id":"-:self-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"self.class.raw(value != 0 ? MOD &- value : 0_i64)"}},{"id":"/(v)-instance-method","html_id":"/(v)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"/","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / (self.class.new(v))"}},{"id":"/(m:self)-instance-method","html_id":"/(m:self)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"/","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if m.value == 0\n  raise(DivisionByZeroError.new)\nend\na, b, u, v = m.value, MOD, 1_i64, 0_i64\nwhile b != 0\n  t = a // b\n  a = a &- (t &* b)\n  a, b = b, a\n  u = u &- (t &* v)\n  u, v = v, u\nend\nself.class.new(value &* u)\n"}},{"id":"//(v)-instance-method","html_id":"//(v)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"args_string":"(v)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"//","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self / v"}},{"id":"<(other)-instance-method","html_id":"&lt;(other)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<\"))"}},{"id":"<=(other)-instance-method","html_id":"&lt;=(other)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"<=\"))"}},{"id":"==(m:self)-instance-method","html_id":"==(m:self)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"args_string":"(m : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"==","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == m.value"}},{"id":"==(m)-instance-method","html_id":"==(m)-instance-method","name":"==","doc":"Returns `true` if this struct is equal to *other*.\n\nBoth structs's instance vars are compared to each other. Thus, two\nstructs are considered equal if each of their instance variables are\nequal. Subclasses should override this method to provide specific\nequality semantics.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np2 = Point.new 1, 2\np3 = Point.new 3, 4\n\np1 == p2 # => true\np1 == p3 # => false\n```","summary":"<p>Returns <code>true</code> if this struct is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"args_string":"(m)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"==","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == m"}},{"id":">(other)-instance-method","html_id":"&gt;(other)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">\"))"}},{"id":">=(other)-instance-method","html_id":"&gt;=(other)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\">=\"))"}},{"id":"abs-instance-method","html_id":"abs-instance-method","name":"abs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"abs2-instance-method","html_id":"abs2-instance-method","name":"abs2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"abs2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self * self"}},{"id":"inspect(*args,**options)-instance-method","html_id":"inspect(*args,**options)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options)"}},{"id":"inspect(*args,**options,&)-instance-method","html_id":"inspect(*args,**options,&amp;)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"inspect","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.inspect(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"inv-instance-method","html_id":"inv-instance-method","name":"inv","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.class.raw(1)) // self"}},{"id":"pred-instance-method","html_id":"pred-instance-method","name":"pred","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"pred","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.raw(value != 0 ? value &- 1 : MOD &- 1)"}},{"id":"succ-instance-method","html_id":"succ-instance-method","name":"succ","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"succ","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.raw(value != (MOD &- 1) ? value &+ 1 : 0_i64)"}},{"id":"to_i64:Int64-instance-method","html_id":"to_i64:Int64-instance-method","name":"to_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"value"}},{"id":"to_s(*args,**options)-instance-method","html_id":"to_s(*args,**options)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options)"}},{"id":"to_s(*args,**options,&)-instance-method","html_id":"to_s(*args,**options,&amp;)-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":null,"def":{"name":"to_s","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@value.to_s(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"value:Int64-instance-method","html_id":"value:Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@value"}}],"macros":[{"id":"[](*nums)-macro","html_id":"[](*nums)-macro","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"nums","doc":null,"default_value":"","external_name":"nums","restriction":""}],"args_string":"(*nums)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"[]","args":[{"name":"nums","doc":null,"default_value":"","external_name":"nums","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"      \n        Array(\n{{ @type }}\n).build(\n{{ nums.size }}\n) do |\n%buffer\n|\n          \n{% for num, i in nums %}\n            %buffer[{{ i }}] = {{ @type }}.new({{ num }})\n          {% end %}\n\n          \n{{ nums.size }}\n\n        \nend\n      \n    \n"}}],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/MultiSet","path":"MultiSet.html","kind":"class","full_name":"MultiSet(T)","name":"MultiSet","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/multi_set.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(enumerable:Enumerable(T))-class-method","html_id":"new(enumerable:Enumerable(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"args_string":"(enumerable : Enumerable(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L11","def":{"name":"new","args":[{"name":"enumerable","doc":null,"default_value":"","external_name":"enumerable","restriction":"Enumerable(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = MultiSet(T).allocate\n_.initialize(enumerable)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L8","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = MultiSet(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"&(other:MultiSet(T)):self-instance-method","html_id":"&amp;(other:MultiSet(T)):self-instance-method","name":"&","doc":"Intersection","summary":"<p>Intersection</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiSet(T)"}],"args_string":"(other : MultiSet(T)) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L163","def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiSet(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"small, large = self, other\nif large.kind_count < small.kind_count\n  small, large = large, small\nend\nresult = MultiSet(T).new\nsmall.each_count do |elem, cnt|\n  result.add(elem, Math.min(cnt, large.count(elem)))\nend\nresult\n"}},{"id":"+(other:MultiSet(U))forallU-instance-method","html_id":"+(other:MultiSet(U))forallU-instance-method","name":"+","doc":"Addition","summary":"<p>Addition</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiSet(U)"}],"args_string":"(other : MultiSet(U)) forall U","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L185","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiSet(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self | other"}},{"id":"self-instance-method","html_id":"self-instance-method","name":"<<","doc":"Alias for `add`.","summary":"<p>Alias for <code><a href=\"MultiSet.html#add(object:T):self-instance-method\">#add</a></code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"args_string":"(object : T) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L61","def":{"name":"<<","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"add(object)"}},{"id":"===(object:T):Bool-instance-method","html_id":"===(object:T):Bool-instance-method","name":"===","doc":"Same as `includes?`","summary":"<p>Same as <code><a href=\"MultiSet.html#includes?(object:T):Bool-instance-method\">#includes?</a></code></p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"args_string":"(object : T) : Bool","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L36","def":{"name":"===","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"includes?(object)"}},{"id":"add(object:T):self-instance-method","html_id":"add(object:T):self-instance-method","name":"add","doc":"Adds *object* to the multiset and returns self.","summary":"<p>Adds <em>object</em> to the multiset and returns self.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"args_string":"(object : T) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L46","def":{"name":"add","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"__temp_76 = object\n@count[__temp_76] = @count[__temp_76] + 1\n@size = @size + 1\nself\n"}},{"id":"add(object:T,count:Int32):self-instance-method","html_id":"add(object:T,count:Int32):self-instance-method","name":"add","doc":"Adds *object* to the multiset *count* times and returns self.","summary":"<p>Adds <em>object</em> to the multiset <em>count</em> times and returns self.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"args_string":"(object : T, count : Int32) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L53","def":{"name":"add","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if count >= 0\nelse\n  raise(ArgumentError.new)\nend\n__temp_78 = object\n@count[__temp_78] = @count[__temp_78] + count\n@size = @size + count\nself\n"}},{"id":"clear-instance-method","html_id":"clear-instance-method","name":"clear","doc":"Removes all elements in the multiset and returns `self`.","summary":"<p>Removes all elements in the multiset and returns <code>self</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L91","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@count.clear\n@size = 0\nself\n"}},{"id":"concat(elems):self-instance-method","html_id":"concat(elems):self-instance-method","name":"concat","doc":"Adds `each` element of *elems* to the multisetset and returns self.","summary":"<p>Adds <code><a href=\"MultiSet.html#each-instance-method\">#each</a></code> element of <em>elems</em> to the multisetset and returns self.</p>","abstract":false,"args":[{"name":"elems","doc":null,"default_value":"","external_name":"elems","restriction":""}],"args_string":"(elems) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L85","def":{"name":"concat","args":[{"name":"elems","doc":null,"default_value":"","external_name":"elems","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"elems.each do |elem|\n  self << elem\nend\nself\n"}},{"id":"count(object:T)-instance-method","html_id":"count(object:T)-instance-method","name":"count","doc":"Returns the number of times that the *object* is present in the multiset.","summary":"<p>Returns the number of times that the <em>object</em> is present in the multiset.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"args_string":"(object : T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L41","def":{"name":"count","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@count[object]"}},{"id":"delete(object:T,count:Int32):Bool-instance-method","html_id":"delete(object:T,count:Int32):Bool-instance-method","name":"delete","doc":"Removes the *object* from the multiset at most *count* times and returns `true` if it was present, otherwise returns `false`.","summary":"<p>Removes the <em>object</em> from the multiset at most <em>count</em> times and returns <code>true</code> if it was present, otherwise returns <code>false</code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"args_string":"(object : T, count : Int32) : Bool","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L75","def":{"name":"delete","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if count >= 0\nelse\n  raise(ArgumentError.new)\nend\nif flag = @count[object] > 0\n  @count[object] = {0, @count[object] - count}.max\n  if @count[object] == 0\n    @count.delete(object)\n  end\nend\nflag\n"}},{"id":"delete(object:T):Bool-instance-method","html_id":"delete(object:T):Bool-instance-method","name":"delete","doc":"Removes the *object* from the multiset and returns `true` if it was present, otherwise returns `false`.","summary":"<p>Removes the <em>object</em> from the multiset and returns <code>true</code> if it was present, otherwise returns <code>false</code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"args_string":"(object : T) : Bool","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L66","def":{"name":"delete","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if flag = @count[object] > 0\n  __temp_80 = object\n  @count[__temp_80] = @count[__temp_80] - 1\n  if @count[object] == 0\n    @count.delete(object)\n  end\nend\nflag\n"}},{"id":"each-instance-method","html_id":"each-instance-method","name":"each","doc":"Returns an iterator for each element of the multiset.","summary":"<p>Returns an iterator for each element of the multiset.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L119","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"MultiSetIterator(T).new(@count)"}},{"id":"each(&):Nil-instance-method","html_id":"each(&amp;):Nil-instance-method","name":"each","doc":"Yields each element of the multiset, and returns `nil`.","summary":"<p>Yields each element of the multiset, and returns <code>nil</code>.</p>","abstract":false,"args":[],"args_string":"(&) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L124","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@count.each do |__arg0|\n  elem = __arg0[0]\n  cnt = __arg0[1]\n  cnt.times do\n    yield elem\n  end\nend"}},{"id":"each_count(&):Nil-instance-method","html_id":"each_count(&amp;):Nil-instance-method","name":"each_count","doc":"Yields each pair of element and count of the multiset, and returns `nil`.","summary":"<p>Yields each pair of element and count of the multiset, and returns <code>nil</code>.</p>","abstract":false,"args":[],"args_string":"(&) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L156","def":{"name":"each_count","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@count.each do |__arg1|\n  elem = __arg1[0]\n  cnt = __arg1[1]\n  yield elem, cnt\nend"}},{"id":"each_count-instance-method","html_id":"each_count-instance-method","name":"each_count","doc":"Returns an iterator for each tuple of element and count of the multiset","summary":"<p>Returns an iterator for each tuple of element and count of the multiset</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L151","def":{"name":"each_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@count.each"}},{"id":"empty?:Bool-instance-method","html_id":"empty?:Bool-instance-method","name":"empty?","doc":"Returns `true` if the multiset is empty.","summary":"<p>Returns <code>true</code> if the multiset is empty.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L26","def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"size == 0"}},{"id":"includes?(object:T):Bool-instance-method","html_id":"includes?(object:T):Bool-instance-method","name":"includes?","doc":"Returns `true` if *object* exists in the multiset.","summary":"<p>Returns <code>true</code> if <em>object</em> exists in the multiset.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"args_string":"(object : T) : Bool","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L31","def":{"name":"includes?","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@count[object] > 0"}},{"id":"inspect(io:IO)-instance-method","html_id":"inspect(io:IO)-instance-method","name":"inspect","doc":"Appends a String representation of this object\nwhich includes its class name, its object address\nand the values of all instance variables.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).inspect # => #<Person:0x10fd31f20 @name=\"John\", @age=32>\n```","summary":"<p>Appends a String representation of this object which includes its class name, its object address and the values of all instance variables.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L193","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << '['\neach.join(\", \", io)\nio << ']'\n"}},{"id":"intersects?(other:self)-instance-method","html_id":"intersects?(other:self)-instance-method","name":"intersects?","doc":"Returns `true` if the multiset and the given multiset have at least one element in common.","summary":"<p>Returns <code>true</code> if the multiset and the given multiset have at least one element in common.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L131","def":{"name":"intersects?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if kind_count < other.kind_count\n  any? do |o|\n    other.includes?(o)\n  end\nelse\n  other.any? do |o|\n    includes?(o)\n  end\nend"}},{"id":"kind_count:Int32-instance-method","html_id":"kind_count:Int32-instance-method","name":"kind_count","doc":"Returns the number of kinds in the multiset.","summary":"<p>Returns the number of kinds in the multiset.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L21","def":{"name":"kind_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@count.size"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of elements in the set.","summary":"<p>Returns the number of elements in the set.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L16","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"subset_of?(other:self)-instance-method","html_id":"subset_of?(other:self)-instance-method","name":"subset_of?","doc":"Returns `true` if the multiset is a subset of the given multiset.","summary":"<p>Returns <code>true</code> if the multiset is a subset of the given multiset.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L140","def":{"name":"subset_of?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if other.size < size\n  return false\nend\nall? do |o|\n  other.includes?(o)\nend\n"}},{"id":"superset_of?(other:self)-instance-method","html_id":"superset_of?(other:self)-instance-method","name":"superset_of?","doc":"Returns true if the multiset is a superset of the given multiset.","summary":"<p>Returns true if the multiset is a superset of the given multiset.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L146","def":{"name":"superset_of?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"other.subset_of?(self)"}},{"id":"to_s(io:IO)-instance-method","html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L189","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << @count"}},{"id":"|(other:MultiSet(U))forallU-instance-method","html_id":"|(other:MultiSet(U))forallU-instance-method","name":"|","doc":"Union","summary":"<p>Union</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiSet(U)"}],"args_string":"(other : MultiSet(U)) forall U","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/multi_set.cr#L177","def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"MultiSet(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = MultiSet(T | U).new\neach_count do |elem, cnt|\n  result.add(elem, cnt)\nend\nother.each_count do |elem, cnt|\n  result.add(elem, cnt)\nend\nresult\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/NTT","path":"NTT.html","kind":"class","full_name":"NTT","name":"NTT","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"math/ntt.cr","line_number":2,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/ntt.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ROOT","name":"ROOT","value":"3","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"reference : https://kopricky.github.io/code/FFTs/ntt.html","summary":"<p>reference : https://kopricky.github.io/code/FFTs/ntt.html</p>","class_methods":[{"id":"convolution(a:Array(T),b:Array(T))forallT-class-method","html_id":"convolution(a:Array(T),b:Array(T))forallT-class-method","name":"convolution","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Array(T)"}],"args_string":"(a : Array(T), b : Array(T)) forall T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/ntt.cr#L36","def":{"name":"convolution","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"size = (a.size + b.size) - 1\nt = Math.pw2ceil(size)\naa = a + (Array.new(t - a.size, T.zero))\nbb = b + (Array.new(t - b.size, T.zero))\nc = ((ntt(aa)).zip(ntt(bb))).map do |x, y|\n  x * y\nend\n(ntt(c, true)).first(size)\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/PartiallyPersistentUnionFind","path":"PartiallyPersistentUnionFind.html","kind":"class","full_name":"PartiallyPersistentUnionFind","name":"PartiallyPersistentUnionFind","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/partially_persistent_union_find.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/partially_persistent_union_find.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size:Int)-class-method","html_id":"new(size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/partially_persistent_union_find.cr#L4","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"now:Int32-instance-method","html_id":"now:Int32-instance-method","name":"now","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/partially_persistent_union_find.cr#L2","def":{"name":"now","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@now"}},{"id":"root(x:Int,time:Int):Int32-instance-method","html_id":"root(x:Int,time:Int):Int32-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int"}],"args_string":"(x : Int, time : Int) : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/partially_persistent_union_find.cr#L13","def":{"name":"root","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"time < @time[x] ? x : root(@parent[x], time)"}},{"id":"same?(x:Int,y:Int,time:Int):Bool-instance-method","html_id":"same?(x:Int,y:Int,time:Int):Bool-instance-method","name":"same?","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int"}],"args_string":"(x : Int, y : Int, time : Int) : Bool","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/partially_persistent_union_find.cr#L17","def":{"name":"same?","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(root(x, time)) == (root(y, time))"}},{"id":"size(x:Int,time:Int):Int-instance-method","html_id":"size(x:Int,time:Int):Int-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int"}],"args_string":"(x : Int, time : Int) : Int","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/partially_persistent_union_find.cr#L33","def":{"name":"size","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"x = root(x, time)\npos = @num[x].bsearch_index do |__arg1, _|\n  t = __arg1[0]\n  s = __arg1[1]\n  t > time\nend || @num[x].size\n@num[x][pos - 1][1]\n"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/partially_persistent_union_find.cr#L2","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"unite(x:Int,y:Int):Bool-instance-method","html_id":"unite(x:Int,y:Int):Bool-instance-method","name":"unite","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(x : Int, y : Int) : Bool","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/partially_persistent_union_find.cr#L21","def":{"name":"unite","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@now = @now + 1\nx, y = root(x, now), root(y, now)\nif x == y\n  return false\nend\nif @rank[x] < @rank[y]\n  x, y = y, x\nend\n@num[x] << {now, (size(x, now)) + (size(y, now))}\n@parent[y] = x\n@time[y] = now\nif @rank[x] == @rank[y]\n  __temp_82 = x\n  @rank[__temp_82] = @rank[__temp_82] + 1\nend\ntrue\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/PersistentArray","path":"PersistentArray.html","kind":"class","full_name":"PersistentArray(T)","name":"PersistentArray","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/persistent_array.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_array.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CHILD_SIZE","name":"CHILD_SIZE","value":"32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(array:Array(T))-class-method","html_id":"new(array:Array(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(T)"}],"args_string":"(array : Array(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_array.cr#L35","def":{"name":"new","args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PersistentArray(T).allocate\n_.initialize(array)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_array.cr#L31","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PersistentArray(T).allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](i:Int):T-instance-method","html_id":"[](i:Int):T-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"}],"args_string":"(i : Int) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_array.cr#L42","def":{"name":"[]","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"get(i)"}},{"id":"destractive_set(i:Int,val:T):T-instance-method","html_id":"destractive_set(i:Int,val:T):T-instance-method","name":"destractive_set","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"args_string":"(i : Int, val : T) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_array.cr#L64","def":{"name":"destractive_set","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"ptr = pointerof(@root)\nloop do\n  if ptr.value.null?\n    ptr.value = Pointer(Node(T)).malloc\n  end\n  if i == 0\n    ptr.value.value.value = val\n    break\n  else\n    ptr = ptr.value.value.child.to_unsafe + (i % CHILD_SIZE)\n    i = i // CHILD_SIZE\n  end\nend\nval\n"}},{"id":"get(i:Int):T-instance-method","html_id":"get(i:Int):T-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"}],"args_string":"(i : Int) : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_array.cr#L46","def":{"name":"get","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"ptr = @root\nloop do\n  if ptr.null?\n    return T.zero\n  else\n    if i == 0\n      return ptr.value.value\n    else\n      ptr = ptr.value.child[i % CHILD_SIZE]\n      i = i // CHILD_SIZE\n    end\n  end\nend\n"}},{"id":"set(i:Int,val:T):self-instance-method","html_id":"set(i:Int,val:T):self-instance-method","name":"set","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"args_string":"(i : Int, val : T) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_array.cr#L60","def":{"name":"set","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"PersistentArray(T).new(self.class.set(i, val, @root))"}},{"id":"to_a(size:Int):Array(T)-instance-method","html_id":"to_a(size:Int):Array(T)-instance-method","name":"to_a","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int) : Array(T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_array.cr#L81","def":{"name":"to_a","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"(0...size).map do |i|\n  get(i)\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/PersistentUnionFind","path":"PersistentUnionFind.html","kind":"class","full_name":"PersistentUnionFind","name":"PersistentUnionFind","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/persistent_union_find.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_union_find.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size:Int)-class-method","html_id":"new(size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_union_find.cr#L7","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"root(x:Int)-instance-method","html_id":"root(x:Int)-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"args_string":"(x : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_union_find.cr#L11","def":{"name":"root","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"p = @data[x]\np >= 0 ? root(p) : x\n"}},{"id":"same?(x:Int,y:Int)-instance-method","html_id":"same?(x:Int,y:Int)-instance-method","name":"same?","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(x : Int, y : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_union_find.cr#L16","def":{"name":"same?","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(root(x)) == (root(y))"}},{"id":"size(x:Int)-instance-method","html_id":"size(x:Int)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"args_string":"(x : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_union_find.cr#L20","def":{"name":"size","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"-@data[root(x)]"}},{"id":"unite(x:Int,y:Int):::Tuple(Bool,PersistentUnionFind)-instance-method","html_id":"unite(x:Int,y:Int):::Tuple(Bool,PersistentUnionFind)-instance-method","name":"unite","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"args_string":"(x : Int, y : Int) : ::Tuple(Bool, PersistentUnionFind)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/persistent_union_find.cr#L24","def":{"name":"unite","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Tuple(Bool, PersistentUnionFind)","visibility":"Public","body":"x, y = root(x), root(y)\nif x == y\n  return {false, self}\nend\ndx, dy = @data[x], @data[y]\nif dx > dy\n  x, y = y, x\n  dx, dy = dy, dx\nend\n{true, PersistentUnionFind.new((@data.set(x, dx + dy)).set(y, x))}\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Point","path":"Point.html","kind":"struct","full_name":"Point","name":"Point","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"point.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Direction4","name":"Direction4","value":"[Point.up, Point.left, Point.down, Point.right]","doc":null,"summary":null},{"id":"Direction8","name":"Direction8","value":"Direction4 + [Point.ul, Point.ur, Point.dl, Point.dr]","doc":null,"summary":null}],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"dl-class-method","html_id":"dl-class-method","name":"dl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L63","def":{"name":"dl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(1, -1)"}},{"id":"down-class-method","html_id":"down-class-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L59","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(1, 0)"}},{"id":"dr-class-method","html_id":"dr-class-method","name":"dr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L64","def":{"name":"dr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(1, 1)"}},{"id":"height:Int32-class-method","html_id":"height:Int32-class-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L10","def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if (value = @@height).nil?\n  ::raise(NilAssertionError.new(\"Point.height cannot be nil\"))\nelse\n  value\nend"}},{"id":"height?:Int32?-class-method","html_id":"height?:Int32?-class-method","name":"height?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L10","def":{"name":"height?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@@height"}},{"id":"left-class-method","html_id":"left-class-method","name":"left","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L58","def":{"name":"left","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(0, -1)"}},{"id":"right-class-method","html_id":"right-class-method","name":"right","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L60","def":{"name":"right","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(0, 1)"}},{"id":"set_range(height:Int32,width:Int32)-class-method","html_id":"set_range(height:Int32,width:Int32)-class-method","name":"set_range","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(height : Int32, width : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L12","def":{"name":"set_range","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if 0 < height && 0 < width\nelse\n  raise(ArgumentError.new)\nend\n@@height, @@width = height, width\n"}},{"id":"size-class-method","html_id":"size-class-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L17","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"height * width"}},{"id":"to_direction?(c:Char,lrud=&quot;LRUD&quot;)-class-method","html_id":"to_direction?(c:Char,lrud=&amp;quot;LRUD&amp;quot;)-class-method","name":"to_direction?","doc":null,"summary":null,"abstract":false,"args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Char"},{"name":"lrud","doc":null,"default_value":"\"LRUD\"","external_name":"lrud","restriction":""}],"args_string":"(c : Char, lrud = <span class=\"s\">&quot;LRUD&quot;</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L180","def":{"name":"to_direction?","args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Char"},{"name":"lrud","doc":null,"default_value":"\"LRUD\"","external_name":"lrud","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if lrud.size == 4\nelse\n  raise(ArgumentError.new)\nend\n(lrud.index(c)).try do |i|\n  {left, right, up, down}[i]\nend\n"}},{"id":"to_direction?(s:String,lrud=&quot;LRUD&quot;)-class-method","html_id":"to_direction?(s:String,lrud=&amp;quot;LRUD&amp;quot;)-class-method","name":"to_direction?","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"},{"name":"lrud","doc":null,"default_value":"\"LRUD\"","external_name":"lrud","restriction":""}],"args_string":"(s : String, lrud = <span class=\"s\">&quot;LRUD&quot;</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L185","def":{"name":"to_direction?","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"},{"name":"lrud","doc":null,"default_value":"\"LRUD\"","external_name":"lrud","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case s.size\nwhen 1\n  to_direction?(s[0], lrud)\nwhen 2\n  p1 = (to_direction?(s[0], lrud)) || (return nil)\n  p2 = (to_direction?(s[1], lrud)) || (return nil)\n  if ((p1.x ^ p2.x) != 0) && ((p1.y ^ p2.y) != 0)\n  else\n    return nil\n  end\n  p1 + p2\nend"}},{"id":"ul-class-method","html_id":"ul-class-method","name":"ul","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L61","def":{"name":"ul","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(-1, -1)"}},{"id":"unsafe_fetch(index:Int)-class-method","html_id":"unsafe_fetch(index:Int)-class-method","name":"unsafe_fetch","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L21","def":{"name":"unsafe_fetch","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(index // Point.width, index % Point.width)"}},{"id":"up-class-method","html_id":"up-class-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L57","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(-1, 0)"}},{"id":"ur-class-method","html_id":"ur-class-method","name":"ur","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L62","def":{"name":"ur","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(-1, 1)"}},{"id":"width:Int32-class-method","html_id":"width:Int32-class-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L10","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if (value = @@width).nil?\n  ::raise(NilAssertionError.new(\"Point.width cannot be nil\"))\nelse\n  value\nend"}},{"id":"width?:Int32?-class-method","html_id":"width?:Int32?-class-method","name":"width?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L10","def":{"name":"width?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"@@width"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L56","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(0, 0)"}}],"constructors":[{"id":"[](y:Int32,x:Int32):self-class-method","html_id":"[](y:Int32,x:Int32):self-class-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(y : Int32, x : Int32) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L42","def":{"name":"[]","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"Point.new(y, x)"}},{"id":"from(array:Array(Int32)):self-class-method","html_id":"from(array:Array(Int32)):self-class-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(Int32)"}],"args_string":"(array : Array(Int32)) : <span class=\"k\">self</span>","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L37","def":{"name":"from","args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if array.size == 2\nelse\n  raise(ArgumentError.new)\nend\nPoint.new(array.unsafe_fetch(0), array.unsafe_fetch(1))\n"}},{"id":"new(y:Int32,x:Int32)-class-method","html_id":"new(y:Int32,x:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(y : Int32, x : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L29","def":{"name":"new","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(y, x)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(i:Int32)-class-method","html_id":"new(i:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"args_string":"(i : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L32","def":{"name":"new","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(i)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L25","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"%(other:Point)-instance-method","html_id":"%(other:Point)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y % other.y, x % other.x)"}},{"id":"%(other:Int32)-instance-method","html_id":"%(other:Int32)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"args_string":"(other : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y % other, x % other)"}},{"id":"*(other:Int32)-instance-method","html_id":"*(other:Int32)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"args_string":"(other : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y * other, x * other)"}},{"id":"*(other:Point)-instance-method","html_id":"*(other:Point)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y * other.y, x * other.x)"}},{"id":"+(other:Int32)-instance-method","html_id":"+(other:Int32)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"args_string":"(other : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + other, x + other)"}},{"id":"+(other:Point)-instance-method","html_id":"+(other:Point)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + other.y, x + other.x)"}},{"id":"-(other:Int32)-instance-method","html_id":"-(other:Int32)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"args_string":"(other : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y - other, x - other)"}},{"id":"-(other:Point)-instance-method","html_id":"-(other:Point)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y - other.y, x - other.x)"}},{"id":"//(other:Point)-instance-method","html_id":"//(other:Point)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y // other.y, x // other.x)"}},{"id":"//(other:Int32)-instance-method","html_id":"//(other:Int32)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"args_string":"(other : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L66","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y // other, x // other)"}},{"id":"(other:Point)-instance-method","html_id":"(other:Point)-instance-method","name":"<=>","doc":"The comparison operator. Returns `0` if the two objects are equal,\na negative number if this object is considered less than *other*,\na positive number if this object is considered greter than *other*,\nor `nil` if the two objects are not comparable.\n\nSubclasses define this method to provide class-specific ordering.\n\nThe comparison operator is usually used to sort values:\n\n```\n# Sort in a descending way:\n[3, 1, 2].sort { |x, y| y <=> x } # => [3, 2, 1]\n\n# Sort in an ascending way:\n[3, 1, 2].sort { |x, y| x <=> y } # => [1, 2, 3]\n```","summary":"<p>The comparison operator.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L88","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_i <=> other.to_i"}},{"id":"==(other:Point)-instance-method","html_id":"==(other:Point)-instance-method","name":"==","doc":"Compares this object to *other* based on the receiver’s `<=>` method,\nreturning `true` if it returns `0`.\n\nAlso returns `true` if this and *other* are the same object.","summary":"<p>Compares this object to <em>other</em> based on the receiver’s <code><a href=\"Point.html#(other:Point)-instance-method\">#<=></a></code> method, returning <code>true</code> if it returns <code>0</code>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L84","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(x == other.x) && (y == other.y)"}},{"id":"[](i:Int32)-instance-method","html_id":"[](i:Int32)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"args_string":"(i : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L92","def":{"name":"[]","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if i == 0\n  return y\nend\nif i == 1\n  return x\nend\nraise(IndexError.new)\n"}},{"id":"adj4_in_range(&):Nil-instance-method","html_id":"adj4_in_range(&amp;):Nil-instance-method","name":"adj4_in_range","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L141","def":{"name":"adj4_in_range","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Direction4.each do |d|\n  point = self + d\n  if point.in_range?\n    yield point\n  end\nend"}},{"id":"adj4_in_range-instance-method","html_id":"adj4_in_range-instance-method","name":"adj4_in_range","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L141","def":{"name":"adj4_in_range","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"adjacent4.select(&.in_range?)"}},{"id":"adj8_in_range(&):Nil-instance-method","html_id":"adj8_in_range(&amp;):Nil-instance-method","name":"adj8_in_range","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L141","def":{"name":"adj8_in_range","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Direction8.each do |d|\n  point = self + d\n  if point.in_range?\n    yield point\n  end\nend"}},{"id":"adj8_in_range-instance-method","html_id":"adj8_in_range-instance-method","name":"adj8_in_range","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L141","def":{"name":"adj8_in_range","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"adjacent8.select(&.in_range?)"}},{"id":"adjacent4(&):Nil-instance-method","html_id":"adjacent4(&amp;):Nil-instance-method","name":"adjacent4","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L141","def":{"name":"adjacent4","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Direction4.each do |d|\n  yield self + d\nend"}},{"id":"adjacent4-instance-method","html_id":"adjacent4-instance-method","name":"adjacent4","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L141","def":{"name":"adjacent4","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Direction4.each.map do |p|\n  self + p\nend"}},{"id":"adjacent8-instance-method","html_id":"adjacent8-instance-method","name":"adjacent8","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L141","def":{"name":"adjacent8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Direction8.each.map do |p|\n  self + p\nend"}},{"id":"adjacent8(&):Nil-instance-method","html_id":"adjacent8(&amp;):Nil-instance-method","name":"adjacent8","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L141","def":{"name":"adjacent8","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"Direction8.each do |d|\n  yield self + d\nend"}},{"id":"chebyshev(other:Point)-instance-method","html_id":"chebyshev(other:Point)-instance-method","name":"chebyshev","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L137","def":{"name":"chebyshev","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.max((y - other.y).abs, (x - other.x).abs)"}},{"id":"distance(other:Point)-instance-method","html_id":"distance(other:Point)-instance-method","name":"distance","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L129","def":{"name":"distance","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.sqrt(distance_square(other))"}},{"id":"distance_square(other:Point)-instance-method","html_id":"distance_square(other:Point)-instance-method","name":"distance_square","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L125","def":{"name":"distance_square","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((y - other.y) ** 2) + ((x - other.x) ** 2)"}},{"id":"dl-instance-method","html_id":"dl-instance-method","name":"dl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L63","def":{"name":"dl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + 1, x + -1)"}},{"id":"down-instance-method","html_id":"down-instance-method","name":"down","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L59","def":{"name":"down","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + 1, x + 0)"}},{"id":"dr-instance-method","html_id":"dr-instance-method","name":"dr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L64","def":{"name":"dr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + 1, x + 1)"}},{"id":"in_range?-instance-method","html_id":"in_range?-instance-method","name":"in_range?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L116","def":{"name":"in_range?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((0...Point.height).includes?(y)) && ((0...Point.width).includes?(x))"}},{"id":"inspect(io:IO):Nil-instance-method","html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends this struct's name and instance variables names and values\nto the given IO.\n\n```\nstruct Point\n  def initialize(@x : Int32, @y : Int32)\n  end\nend\n\np1 = Point.new 1, 2\np1.to_s    # \"Point(@x=1, @y=2)\"\np1.inspect # \"Point(@x=1, @y=2)\"\n```","summary":"<p>Appends this struct's name and instance variables names and values to the given IO.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L168","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"to_s(io)"}},{"id":"left-instance-method","html_id":"left-instance-method","name":"left","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L58","def":{"name":"left","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + 0, x + -1)"}},{"id":"manhattan(other:Point)-instance-method","html_id":"manhattan(other:Point)-instance-method","name":"manhattan","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"args_string":"(other : Point)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L133","def":{"name":"manhattan","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(y - other.y).abs + (x - other.x).abs"}},{"id":"pred-instance-method","html_id":"pred-instance-method","name":"pred","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L107","def":{"name":"pred","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if in_range? && (self != Point.first)\nelse\n  raise(IndexError.new)\nend\nif x > 0\n  Point.new(y, x - 1)\nelse\n  Point.new(y - 1, Point.width - 1)\nend\n"}},{"id":"right-instance-method","html_id":"right-instance-method","name":"right","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L60","def":{"name":"right","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + 0, x + 1)"}},{"id":"succ-instance-method","html_id":"succ-instance-method","name":"succ","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L98","def":{"name":"succ","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if in_range? && (self != Point.last)\nelse\n  raise(IndexError.new)\nend\nif x < (Point.width - 1)\n  Point.new(y, x + 1)\nelse\n  Point.new(y + 1, 0)\nend\n"}},{"id":"to_direction_char?(lrud=&quot;LRUD&quot;):Char?-instance-method","html_id":"to_direction_char?(lrud=&amp;quot;LRUD&amp;quot;):Char?-instance-method","name":"to_direction_char?","doc":null,"summary":null,"abstract":false,"args":[{"name":"lrud","doc":null,"default_value":"\"LRUD\"","external_name":"lrud","restriction":""}],"args_string":"(lrud = <span class=\"s\">&quot;LRUD&quot;</span>) : Char?","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L172","def":{"name":"to_direction_char?","args":[{"name":"lrud","doc":null,"default_value":"\"LRUD\"","external_name":"lrud","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Char | ::Nil","visibility":"Public","body":"if (y == 0) && (x != 0)\n  x < 0 ? lrud[0] : lrud[1]\nelse\n  if (x == 0) && (y != 0)\n    y < 0 ? lrud[2] : lrud[3]\n  end\nend"}},{"id":"to_i:Int32-instance-method","html_id":"to_i:Int32-instance-method","name":"to_i","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L120","def":{"name":"to_i","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if in_range?\nelse\n  raise(IndexError.new)\nend\n(y * Point.width) + x\n"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code><a href=\"Point.html#inspect(io:IO):Nil-instance-method\">#inspect(io)</a></code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L164","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"((((io << '(') << y) << \", \") << x) << ')'"}},{"id":"ul-instance-method","html_id":"ul-instance-method","name":"ul","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L61","def":{"name":"ul","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + -1, x + -1)"}},{"id":"up-instance-method","html_id":"up-instance-method","name":"up","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L57","def":{"name":"up","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + -1, x + 0)"}},{"id":"ur-instance-method","html_id":"ur-instance-method","name":"ur","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L62","def":{"name":"ur","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + -1, x + 1)"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L5","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L5","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"xy-instance-method","html_id":"xy-instance-method","name":"xy","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L76","def":{"name":"xy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(x, y)"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L5","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L5","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}},{"id":"yx-instance-method","html_id":"yx-instance-method","name":"yx","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L80","def":{"name":"yx","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self"}},{"id":"zero-instance-method","html_id":"zero-instance-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/point.cr#L56","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Point.new(y + 0, x + 0)"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/ReRooting","path":"ReRooting.html","kind":"class","full_name":"ReRooting(T, GraphType)","name":"ReRooting","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph/re_rooting.cr","line_number":3,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size:Int)-class-method","html_id":"new(size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr#L6","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ReRooting(T, GraphType).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(*args,**options)-instance-method","html_id":"&lt;&lt;(*args,**options)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr#L13","def":{"name":"<<","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.<<(*args, **options)"}},{"id":"<<(*args,**options,&)-instance-method","html_id":"&lt;&lt;(*args,**options,&amp;)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr#L13","def":{"name":"<<","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.<<(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"add_edges(*args,**options)-instance-method","html_id":"add_edges(*args,**options)-instance-method","name":"add_edges","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr#L14","def":{"name":"add_edges","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.add_edges(*args, **options)"}},{"id":"add_edges(*args,**options,&)-instance-method","html_id":"add_edges(*args,**options,&amp;)-instance-method","name":"add_edges","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr#L14","def":{"name":"add_edges","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.add_edges(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"graph:GraphType-instance-method","html_id":"graph:GraphType-instance-method","name":"graph","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : GraphType","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr#L4","def":{"name":"graph","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"GraphType","visibility":"Public","body":"@graph"}},{"id":"size(*args,**options)-instance-method","html_id":"size(*args,**options)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr#L12","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options)"}},{"id":"size(*args,**options,&)-instance-method","html_id":"size(*args,**options,&amp;)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr#L12","def":{"name":"size","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@graph.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"solve:Array(T)-instance-method","html_id":"solve:Array(T)-instance-method","name":"solve","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/re_rooting.cr#L43","def":{"name":"solve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"@dp = Array.new(size) do |i|\n  Array.new(@graph[i].size, T.new)\nend\n@result = Array.new(size, T.new)\ndfs(0, -1)\nbfs(0, -1, T.new)\n@result\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/RollingHash","path":"RollingHash.html","kind":"class","full_name":"RollingHash","name":"RollingHash","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"string/rolling_hash.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/string/rolling_hash.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"MOD","name":"MOD","value":"(1_u64 << 61) - 1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(s:String,base:UInt64=10007_u64)-class-method","html_id":"new(s:String,base:UInt64=10007_u64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"},{"name":"base","doc":null,"default_value":"10007_u64","external_name":"base","restriction":"UInt64"}],"args_string":"(s : String, base : UInt64 = <span class=\"n\">10007_u64</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/string/rolling_hash.cr#L12","def":{"name":"new","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"},{"name":"base","doc":null,"default_value":"10007_u64","external_name":"base","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(s, base)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(a:Array(Int),base:UInt64=10007_u64)-class-method","html_id":"new(a:Array(Int),base:UInt64=10007_u64)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(Int)"},{"name":"base","doc":null,"default_value":"10007_u64","external_name":"base","restriction":"UInt64"}],"args_string":"(a : Array(Int), base : UInt64 = <span class=\"n\">10007_u64</span>)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/string/rolling_hash.cr#L16","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(Int)"},{"name":"base","doc":null,"default_value":"10007_u64","external_name":"base","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(a, base)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size,a:Enumerable,base:UInt64=10007_u64,&)-class-method","html_id":"new(size,a:Enumerable,base:UInt64=10007_u64,&amp;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Enumerable"},{"name":"base","doc":null,"default_value":"10007_u64","external_name":"base","restriction":"UInt64"}],"args_string":"(size, a : Enumerable, base : UInt64 = <span class=\"n\">10007_u64</span>, &)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/string/rolling_hash.cr#L20","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Enumerable"},{"name":"base","doc":null,"default_value":"10007_u64","external_name":"base","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size, a, base) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](start:Int,count:Int)-instance-method","html_id":"[](start:Int,count:Int)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"}],"args_string":"(start : Int, count : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/string/rolling_hash.cr#L30","def":{"name":"[]","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int"},{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"res = (@hash[start + count] + MOD) - (mul(@hash[start], @pow[count]))\nres < MOD ? res : res - MOD\n"}},{"id":"[](range:Range)-instance-method","html_id":"[](range:Range)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"}],"args_string":"(range : Range)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/string/rolling_hash.cr#L35","def":{"name":"[]","args":[{"name":"range","doc":null,"default_value":"","external_name":"range","restriction":"Range"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[*(Indexable.range_to_index_and_count(range, size)) || (raise(IndexError.new))]"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/string/rolling_hash.cr#L10","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Scanner","path":"Scanner.html","kind":"class","full_name":"Scanner","name":"Scanner","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"scanner.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/scanner.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"c-class-method","html_id":"c-class-method","name":"c","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/scanner.cr#L8","def":{"name":"c","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"skip_to_not_space\nSTDIN.read_char.not_nil!\n"}},{"id":"s-class-method","html_id":"s-class-method","name":"s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/scanner.cr#L13","def":{"name":"s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"skip_to_not_space\npeek = STDIN.peek\nif index = peek.index do |x|\n  (x == 32) || (x == 10)\nend\n  STDIN.skip(index + 1)\n  return String.new(peek[0, index])\nend\nString.build do |buffer|\n  loop do\n    buffer.write(peek)\n    STDIN.skip(peek.size)\n    peek = STDIN.peek\n    if peek.empty?\n      break\n    end\n    if index = peek.index do |x|\n      (x == 32) || (x == 10)\n    end\n      buffer.write(peek[0, index])\n      STDIN.skip(index)\n      break\n    end\n  end\nend\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/Sieve","path":"Sieve.html","kind":"class","full_name":"Sieve","name":"Sieve","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"math/sieve.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/sieve.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/sieve.cr#L5","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"each_factor(x,&):Nil-instance-method","html_id":"each_factor(x,&amp;):Nil-instance-method","name":"each_factor","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x, &) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/sieve.cr#L46","def":{"name":"each_factor","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"while x > 1\n  element = @factor[x]\n  count = 0\n  while (x != 1) && (@factor[x] == element)\n    count = count + 1\n    x = x // element\n  end\n  yield element, count\nend"}},{"id":"factor:Array(Int32)-instance-method","html_id":"factor:Array(Int32)-instance-method","name":"factor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/sieve.cr#L3","def":{"name":"factor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@factor"}},{"id":"prime?(x)-instance-method","html_id":"prime?(x)-instance-method","name":"prime?","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/sieve.cr#L20","def":{"name":"prime?","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"factor[x] == x"}},{"id":"prime_division(x)-instance-method","html_id":"prime_division(x)-instance-method","name":"prime_division","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/sieve.cr#L42","def":{"name":"prime_division","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"PrimeDivisionIterator.new(x, factor)"}},{"id":"primes:Array(Int32)-instance-method","html_id":"primes:Array(Int32)-instance-method","name":"primes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/sieve.cr#L3","def":{"name":"primes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@primes"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/sieve.cr#L2","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"template.cr","line_number":5,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/template.cr"},{"filename":"math/mint.cr","line_number":180,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr"},{"filename":"math/mint.cr","line_number":181,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nString might end up being conformed of bytes which are an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but\ninvalid byte sequences, when asked as chars, will use the unicode replacement\nchar (value 0xFFFD). For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['�', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_i64-instance-method","html_id":"to_i64-instance-method","name":"to_i64","doc":"Same as `#to_i` but returns an `Int64`.","summary":"<p>Same as <code>#to_i</code> but returns an <code>Int64</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/template.cr#L6","def":{"name":"to_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"C.strtoll(self, nil, 10)"}},{"id":"to_m:Mint-instance-method","html_id":"to_m:Mint-instance-method","name":"to_m","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Mint","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L180","def":{"name":"to_m","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mint","visibility":"Public","body":"Mint.new(self)"}},{"id":"to_m2:Mint2-instance-method","html_id":"to_m2:Mint2-instance-method","name":"to_m2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Mint2","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/math/mint.cr#L181","def":{"name":"to_m2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Mint2","visibility":"Public","body":"Mint2.new(self)"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/UndirectedGraph","path":"UndirectedGraph.html","kind":"class","full_name":"UndirectedGraph(T)","name":"UndirectedGraph","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Graph","kind":"module","full_name":"Graph","name":"Graph"},{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph.cr","line_number":92,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Graph","kind":"module","full_name":"Graph","name":"Graph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"directed?-class-method","html_id":"directed?-class-method","name":"directed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L118","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}},{"id":"weighted?-class-method","html_id":"weighted?-class-method","name":"weighted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L114","def":{"name":"weighted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"true"}}],"constructors":[{"id":"new(size:Int,edges:Enumerable(WeightedEdge2(T)))-class-method","html_id":"new(size:Int,edges:Enumerable(WeightedEdge2(T)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(WeightedEdge2(T))"}],"args_string":"(size : Int, edges : Enumerable(WeightedEdge2(T)))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L99","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(WeightedEdge2(T))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UndirectedGraph(T).allocate\n_.initialize(size, edges)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int,edges:Enumerable(::Tuple(Int32,Int32,T)))-class-method","html_id":"new(size:Int,edges:Enumerable(::Tuple(Int32,Int32,T)))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(::Tuple(Int32, Int32, T))"}],"args_string":"(size : Int, edges : Enumerable(::Tuple(Int32, Int32, T)))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L103","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(::Tuple(Int32, Int32, T))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UndirectedGraph(T).allocate\n_.initialize(size, edges)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int)-class-method","html_id":"new(size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L95","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UndirectedGraph(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(edge:WeightedEdge2(T))-instance-method","html_id":"&lt;&lt;(edge:WeightedEdge2(T))-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"WeightedEdge2(T)"}],"args_string":"(edge : WeightedEdge2(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L107","def":{"name":"<<","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"WeightedEdge2(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (0 <= (__temp_26 = edge.from) && __temp_26 < size) && (0 <= (__temp_27 = edge.to) && __temp_27 < size)\nelse\n  raise(IndexError.new)\nend\n@graph[edge.from] << (WeightedEdge.new(edge.to, edge.cost))\n@graph[edge.to] << (WeightedEdge.new(edge.from, edge.cost))\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/UnionFind","path":"UnionFind.html","kind":"class","full_name":"UnionFind","name":"UnionFind","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"datastructure/union_find.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/union_find.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(n:Int32)-class-method","html_id":"new(n:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"}],"args_string":"(n : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/union_find.cr#L4","def":{"name":"new","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(n)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"groups-instance-method","html_id":"groups-instance-method","name":"groups","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/union_find.cr#L30","def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"groups = Hash(Int32, Set(Int32)).new do |h, k|\n  h[k] = Set(Int32).new\nend\n@d.size.times do |i|\n  groups[root(i)] << i\nend\ngroups.values.to_set\n"}},{"id":"root(x:Int32)-instance-method","html_id":"root(x:Int32)-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/union_find.cr#L8","def":{"name":"root","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@d[x] < 0 ? x : (@d[x] = root(@d[x]))"}},{"id":"same?(x:Int32,y:Int32)-instance-method","html_id":"same?(x:Int32,y:Int32)-instance-method","name":"same?","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(x : Int32, y : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/union_find.cr#L22","def":{"name":"same?","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(root(x)) == (root(y))"}},{"id":"size(x:Int32)-instance-method","html_id":"size(x:Int32)-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/union_find.cr#L26","def":{"name":"size","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"-@d[root(x)]"}},{"id":"unite(x:Int32,y:Int32)-instance-method","html_id":"unite(x:Int32,y:Int32)-instance-method","name":"unite","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(x : Int32, y : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/datastructure/union_find.cr#L12","def":{"name":"unite","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = root(x)\ny = root(y)\nif x == y\n  return false\nend\nif @d[x] > @d[y]\n  x, y = y, x\nend\n__temp_84 = x\n@d[__temp_84] = @d[__temp_84] + @d[y]\n@d[y] = x\ntrue\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/UnweightedDirectedGraph","path":"UnweightedDirectedGraph.html","kind":"class","full_name":"UnweightedDirectedGraph","name":"UnweightedDirectedGraph","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Graph","kind":"module","full_name":"Graph","name":"Graph"},{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph.cr","line_number":123,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Graph","kind":"module","full_name":"Graph","name":"Graph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"directed?-class-method","html_id":"directed?-class-method","name":"directed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L144","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"true"}},{"id":"weighted?-class-method","html_id":"weighted?-class-method","name":"weighted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L140","def":{"name":"weighted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}}],"constructors":[{"id":"new(size:Int,edges:Enumerable)-class-method","html_id":"new(size:Int,edges:Enumerable)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"args_string":"(size : Int, edges : Enumerable)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L130","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size, edges)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int)-class-method","html_id":"new(size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L126","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(edge:UnweightedEdge2)-instance-method","html_id":"&lt;&lt;(edge:UnweightedEdge2)-instance-method","name":"<<","doc":"Add *edge*.","summary":"<p>Add <em>edge</em>.</p>","abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"UnweightedEdge2"}],"args_string":"(edge : UnweightedEdge2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L134","def":{"name":"<<","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"UnweightedEdge2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (0 <= (__temp_28 = edge.from) && __temp_28 < size) && (0 <= (__temp_29 = edge.to) && __temp_29 < size)\nelse\n  raise(IndexError.new)\nend\n@graph[edge.from] << (UnweightedEdge.new(edge.to))\nself\n"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/UnweightedEdge","path":"UnweightedEdge.html","kind":"struct","full_name":"UnweightedEdge","name":"UnweightedEdge","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph/edge.cr","line_number":55,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(to)-class-method","html_id":"new(to)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(to)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L58","def":{"name":"new","args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(to)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cost-instance-method","html_id":"cost-instance-method","name":"cost","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L61","def":{"name":"cost","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"1"}},{"id":"inspect(io):Nil-instance-method","html_id":"inspect(io):Nil-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L69","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(io << \"->\") << to"}},{"id":"to:Int32-instance-method","html_id":"to:Int32-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L56","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@to"}},{"id":"to=(to:Int32)-instance-method","html_id":"to=(to:Int32)-instance-method","name":"to=","doc":null,"summary":null,"abstract":false,"args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"}],"args_string":"(to : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L56","def":{"name":"to=","args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to = to"}},{"id":"to_s(io):Nil-instance-method","html_id":"to_s(io):Nil-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L65","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"io << to"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/UnweightedEdge2","path":"UnweightedEdge2.html","kind":"struct","full_name":"UnweightedEdge2","name":"UnweightedEdge2","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph/edge.cr","line_number":74,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(from,edge:UnweightedEdge)-class-method","html_id":"new(from,edge:UnweightedEdge)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"UnweightedEdge"}],"args_string":"(from, edge : UnweightedEdge)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L80","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"UnweightedEdge"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, edge)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(from,to)-class-method","html_id":"new(from,to)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"args_string":"(from, to)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L77","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(from, to)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cost-instance-method","html_id":"cost-instance-method","name":"cost","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L84","def":{"name":"cost","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"1"}},{"id":"from:Int32-instance-method","html_id":"from:Int32-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L75","def":{"name":"from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@from"}},{"id":"from=(from:Int32)-instance-method","html_id":"from=(from:Int32)-instance-method","name":"from=","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Int32"}],"args_string":"(from : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L75","def":{"name":"from=","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@from = from"}},{"id":"inspect(io):Nil-instance-method","html_id":"inspect(io):Nil-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L100","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"((io << from) << \"->\") << to"}},{"id":"reverse-instance-method","html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L88","def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"UnweightedEdge2.new(to, from)"}},{"id":"sort-instance-method","html_id":"sort-instance-method","name":"sort","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L92","def":{"name":"sort","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"UnweightedEdge2.new(*{to, from}.minmax)"}},{"id":"to:Int32-instance-method","html_id":"to:Int32-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L75","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@to"}},{"id":"to=(to:Int32)-instance-method","html_id":"to=(to:Int32)-instance-method","name":"to=","doc":null,"summary":null,"abstract":false,"args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"}],"args_string":"(to : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L75","def":{"name":"to=","args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to = to"}},{"id":"to_s(io):Nil-instance-method","html_id":"to_s(io):Nil-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L96","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"((((io << '(') << from) << \", \") << to) << ')'"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/UnweightedUndirectedGraph","path":"UnweightedUndirectedGraph.html","kind":"class","full_name":"UnweightedUndirectedGraph","name":"UnweightedUndirectedGraph","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Graph","kind":"module","full_name":"Graph","name":"Graph"},{"html_id":"github.com/yuruhi/crystal_lib/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/yuruhi/crystal_lib/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph.cr","line_number":149,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Graph","kind":"module","full_name":"Graph","name":"Graph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"directed?-class-method","html_id":"directed?-class-method","name":"directed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L181","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}},{"id":"weighted?-class-method","html_id":"weighted?-class-method","name":"weighted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L177","def":{"name":"weighted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}}],"constructors":[{"id":"new(size:Int,edges:Enumerable)-class-method","html_id":"new(size:Int,edges:Enumerable)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"args_string":"(size : Int, edges : Enumerable)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L156","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"},{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size, edges)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int)-class-method","html_id":"new(size:Int)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"args_string":"(size : Int)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L152","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(edge:UnweightedEdge2)-instance-method","html_id":"&lt;&lt;(edge:UnweightedEdge2)-instance-method","name":"<<","doc":"Add *edge*.","summary":"<p>Add <em>edge</em>.</p>","abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"UnweightedEdge2"}],"args_string":"(edge : UnweightedEdge2)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L160","def":{"name":"<<","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"UnweightedEdge2"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (0 <= (__temp_30 = edge.from) && __temp_30 < size) && (0 <= (__temp_31 = edge.to) && __temp_31 < size)\nelse\n  raise(IndexError.new)\nend\n@graph[edge.from] << (UnweightedEdge.new(edge.to))\n@graph[edge.to] << (UnweightedEdge.new(edge.from))\nself\n"}},{"id":"each_child(vertex:Int,parent,&):Nil-instance-method","html_id":"each_child(vertex:Int,parent,&amp;):Nil-instance-method","name":"each_child","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertex","doc":null,"default_value":"","external_name":"vertex","restriction":"Int"},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""}],"args_string":"(vertex : Int, parent, &) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L167","def":{"name":"each_child","args":[{"name":"vertex","doc":null,"default_value":"","external_name":"vertex","restriction":"Int"},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"graph[vertex].each do |u|\n  if u != parent\n    yield u\n  end\nend"}},{"id":"each_child(vertex:Int,parent)-instance-method","html_id":"each_child(vertex:Int,parent)-instance-method","name":"each_child","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertex","doc":null,"default_value":"","external_name":"vertex","restriction":"Int"},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""}],"args_string":"(vertex : Int, parent)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph.cr#L173","def":{"name":"each_child","args":[{"name":"vertex","doc":null,"default_value":"","external_name":"vertex","restriction":"Int"},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"graph[vertex].each.select do |u|\n  u != parent\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/WeightedEdge","path":"WeightedEdge.html","kind":"struct","full_name":"WeightedEdge(T)","name":"WeightedEdge","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph/edge.cr","line_number":1,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(to,cost:T)-class-method","html_id":"new(to,cost:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"args_string":"(to, cost : T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L6","def":{"name":"new","args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedEdge(T).allocate\n_.initialize(to, cost)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"(other:WeightedEdge(T))-instance-method","html_id":"(other:WeightedEdge(T))-instance-method","name":"<=>","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"WeightedEdge(T)"}],"args_string":"(other : WeightedEdge(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L9","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"WeightedEdge(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{cost, to} <=> {other.cost, other.to}"}},{"id":"cost:T-instance-method","html_id":"cost:T-instance-method","name":"cost","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L4","def":{"name":"cost","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@cost"}},{"id":"cost=(cost:T)-instance-method","html_id":"cost=(cost:T)-instance-method","name":"cost=","doc":null,"summary":null,"abstract":false,"args":[{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"args_string":"(cost : T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L4","def":{"name":"cost=","args":[{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cost = cost"}},{"id":"inspect(io):Nil-instance-method","html_id":"inspect(io):Nil-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L17","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"io << \"->#{to}(#{cost})\""}},{"id":"to:Int32-instance-method","html_id":"to:Int32-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L4","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@to"}},{"id":"to=(to:Int32)-instance-method","html_id":"to=(to:Int32)-instance-method","name":"to=","doc":null,"summary":null,"abstract":false,"args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"}],"args_string":"(to : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L4","def":{"name":"to=","args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to = to"}},{"id":"to_s(io):Nil-instance-method","html_id":"to_s(io):Nil-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L13","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"((((io << '(') << to) << \", \") << cost) << ')'"}}],"macros":[],"types":[]},{"html_id":"github.com/yuruhi/crystal_lib/WeightedEdge2","path":"WeightedEdge2.html","kind":"struct","full_name":"WeightedEdge2(T)","name":"WeightedEdge2","abstract":false,"superclass":{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/yuruhi/crystal_lib/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/yuruhi/crystal_lib/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/yuruhi/crystal_lib/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"graph/edge.cr","line_number":22,"url":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr"}],"repository_name":"github.com/yuruhi/crystal_lib","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/yuruhi/crystal_lib/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(from,to,cost:T)-class-method","html_id":"new(from,to,cost:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"args_string":"(from, to, cost : T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L27","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":""},{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedEdge2(T).allocate\n_.initialize(from, to, cost)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(from,edge:WeightedEdge(T))-class-method","html_id":"new(from,edge:WeightedEdge(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"WeightedEdge(T)"}],"args_string":"(from, edge : WeightedEdge(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L30","def":{"name":"new","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":""},{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"WeightedEdge(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedEdge2(T).allocate\n_.initialize(from, edge)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"(other:WeightedEdge2(T))-instance-method","html_id":"(other:WeightedEdge2(T))-instance-method","name":"<=>","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"WeightedEdge2(T)"}],"args_string":"(other : WeightedEdge2(T))","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L34","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"WeightedEdge2(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{cost, from, to} <=> {other.cost, other.from, other.to}"}},{"id":"cost:T-instance-method","html_id":"cost:T-instance-method","name":"cost","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L25","def":{"name":"cost","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@cost"}},{"id":"cost=(cost:T)-instance-method","html_id":"cost=(cost:T)-instance-method","name":"cost=","doc":null,"summary":null,"abstract":false,"args":[{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"args_string":"(cost : T)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L25","def":{"name":"cost=","args":[{"name":"cost","doc":null,"default_value":"","external_name":"cost","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cost = cost"}},{"id":"from:Int32-instance-method","html_id":"from:Int32-instance-method","name":"from","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L25","def":{"name":"from","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@from"}},{"id":"from=(from:Int32)-instance-method","html_id":"from=(from:Int32)-instance-method","name":"from=","doc":null,"summary":null,"abstract":false,"args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Int32"}],"args_string":"(from : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L25","def":{"name":"from=","args":[{"name":"from","doc":null,"default_value":"","external_name":"from","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@from = from"}},{"id":"inspect(io):Nil-instance-method","html_id":"inspect(io):Nil-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L50","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(((((io << from) << \"->\") << to) << '(') << cost) << ')'"}},{"id":"reverse-instance-method","html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L38","def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"WeightedEdge2(T).new(to, from, cost)"}},{"id":"sort-instance-method","html_id":"sort-instance-method","name":"sort","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L42","def":{"name":"sort","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"WeightedEdge2(T).new(*{to, from}.minmax, cost)"}},{"id":"to:Int32-instance-method","html_id":"to:Int32-instance-method","name":"to","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L25","def":{"name":"to","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@to"}},{"id":"to=(to:Int32)-instance-method","html_id":"to=(to:Int32)-instance-method","name":"to=","doc":null,"summary":null,"abstract":false,"args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"}],"args_string":"(to : Int32)","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L25","def":{"name":"to=","args":[{"name":"to","doc":null,"default_value":"","external_name":"to","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to = to"}},{"id":"to_s(io):Nil-instance-method","html_id":"to_s(io):Nil-instance-method","name":"to_s","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io) : Nil","source_link":"https://github.com/yuruhi/crystal_lib/blob/71a6429bbd7aa4fb5558e3fa0c56095d22b750d6/src/graph/edge.cr#L46","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"((((((io << '(') << from) << \", \") << to) << \", \") << cost) << ')'"}}],"macros":[],"types":[]}]}})